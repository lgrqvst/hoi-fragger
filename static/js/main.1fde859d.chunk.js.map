{"version":3,"sources":["components/Actor.js","components/Actors.js","components/Titlebar.js","components/Controls.js","components/Overlay.js","components/Prompt.js","components/Splash.js","components/InitiativeSpinner.js","App.js","serviceWorker.js","index.js"],"names":["ActorRow","styled","div","_templateObject","ActorRowInner","_templateObject2","props","mode","css","_templateObject3","ButtonRemoveActor","button","_templateObject4","_templateObject5","ActorName","input","_templateObject6","_templateObject7","ActorNameScreen","_templateObject8","ActorInitiative","_templateObject9","ButtonSetInitiative","_templateObject10","actor","name","id","initiative","showInitiativeSpinner","editActor","removeActor","react_default","a","createElement","type","onClick","index_es","icon","faTimesCircle","value","onChange","event","ActorList","Actors_templateObject","actorList","actors","sort","b","toLowerCase","map","el","Actor","key","Titlebar","Titlebar_templateObject","titlebar","ControlBar","Controls_templateObject","controls","setModeEdit","setModeTracking","setModeInput","reset","addActor","nextActor","previousActor","faPen","faPlay","faTrashAlt","faPlusSquare","faCheck","faArrowDown","faArrowUp","faStop","Overlay","Overlay_templateObject","overlay","click","Prompt","Prompt_templateObject","CloseButton","Prompt_templateObject2","prompt","close","confirm","children","Fragment","components_Overlay","onSubmit","e","Splash","Splash_templateObject","splash","loadDefault","InitiativeSpinner","InitiativeSpinner_templateObject","ButtonConfirmInitiative","InitiativeSpinner_templateObject2","Spinner","InitiativeSpinner_templateObject3","Indicators","InitiativeSpinner_templateObject4","Track","InitiativeSpinner_templateObject5","TrackInner","InitiativeSpinner_templateObject6","TrackNumber","InitiativeSpinner_templateObject7","CurrentNumber","InitiativeSpinner_templateObject8","initiativeSpinner","state","storeInitiative","i","_this","setState","_this2","this","_this$props","hideInitiativeSpinner","setInitiative","filter","tracknumbers","Object","toConsumableArray","Array","keys","concat","onScroll","Math","floor","target","scrollLeft","React","Component","AppContainer","App_templateObject","App","addingNewActor","settingInitiative","settingInitiativeOf","handleReset","handleLoadDefaultActors","handleShowHideAddActor","prevState","handleAddActor","preventDefault","Date","now","promptInput","push","handleEditActor","handleRemoveActor","handleShowHideInitiativeSpinner","handleNextActor","console","log","handlePreviousActor","_this$state","classes","className","join","components_Titlebar","length","components_Splash","components_Prompt","Actors","components_InitiativeSpinner","Controls","setMode","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"owEAOA,IAAMA,EAAWC,IAAOC,IAAVC,KAMRC,EAAgBH,IAAOC,IAAVG,IAYf,SAAAC,GAAK,MAAmB,SAAfA,EAAMC,MACZC,YADMC,OAMPC,EAAoBT,IAAOU,OAAVC,IAanB,SAAAN,GAAK,MAAmB,SAAfA,EAAMC,MACZC,YADMK,OAOPC,EAAYb,IAAOc,MAAVC,IAcX,SAAAV,GAAK,MAAmB,SAAfA,EAAMC,MACZC,YADMS,OAOPC,EAAkBjB,IAAOC,IAAViB,KASfC,EAAkBnB,IAAOC,IAAVmB,KAIfC,EAAsBrB,IAAOU,OAAVY,KA+CVC,EA7BD,SAAClB,GAAU,IAErBC,EACED,EADFC,KAAMkB,EACJnB,EADImB,KAAMC,EACVpB,EADUoB,GAAIC,EACdrB,EADcqB,WAAYC,EAC1BtB,EAD0BsB,sBAAuBC,EACjDvB,EADiDuB,UAAWC,EAC5DxB,EAD4DwB,YAGhE,OACEC,EAAAC,EAAAC,cAACjC,EAAD,CAAUO,KAAMA,GACdwB,EAAAC,EAAAC,cAACvB,EAAD,CAAmBwB,KAAK,SAASC,QAAS,kBAAML,EAAYJ,IAAKnB,KAAMA,GACrEwB,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAiBC,KAAMC,OAEzBP,EAAAC,EAAAC,cAAC7B,EAAD,CAAeG,KAAMA,GACnBwB,EAAAC,EAAAC,cAACnB,EAAD,CAAWoB,KAAK,OAAOK,MAAOd,EAAMe,SAAU,SAAAC,GAAK,OAAIZ,EAAUY,EAAOf,IAAKnB,KAAMA,IAEnFwB,EAAAC,EAAAC,cAACb,EAAD,KACEW,EAAAC,EAAAC,cAAA,YAAON,IAGC,SAATpB,GAAmBwB,EAAAC,EAAAC,cAACf,EAAD,MAEV,UAATX,GACCwB,EAAAC,EAAAC,cAACX,EAAD,CAAqBY,KAAK,SAASC,QAAS,kBAAMP,EAAsBF,KACtEK,EAAAC,EAAAC,cAAA,4HCtHZ,IAAMS,EAAYzC,IAAOC,IAAVyC,KAwCAC,EApCG,SAACtC,GAAU,IACrBuC,EAAWvC,EAAXuC,OAEJtC,EACED,EADFC,KAAMqB,EACJtB,EADIsB,sBAAuBE,EAC3BxB,EAD2BwB,YAAaD,EACxCvB,EADwCuB,UA8B5C,OAbAgB,GAbEA,EADW,aAATtC,EACOsC,EAAOC,KAAK,SAACd,EAAGe,GACvB,OAAIf,EAAEP,KAAKuB,cAAgBD,EAAEtB,KAAKuB,eAAuB,EACrDhB,EAAEP,KAAKuB,cAAgBD,EAAEtB,KAAKuB,cAAsB,EACjD,IAGAH,EAAOC,KAAK,SAACd,EAAGe,GACvB,OAAIf,EAAEL,WAAaoB,EAAEpB,YAAoB,EACrCK,EAAEL,WAAaoB,EAAEpB,WAAmB,EACjC,KAIKsB,IAAI,SAAAC,GAAE,OACpBnB,EAAAC,EAAAC,cAACkB,EAAD,CACEC,IAAKF,EAAGxB,GACRA,GAAIwB,EAAGxB,GACPD,KAAMyB,EAAGzB,KACTE,WAAYuB,EAAGvB,WACfpB,KAAMA,EACNqB,sBAAuBA,EACvBE,YAAaA,EACbD,UAAWA,MAIRE,EAAAC,EAAAC,cAACS,EAAD,KAAYG,6MCvCrB,IAAMQ,EAAWpD,IAAOC,IAAVoD,KAUCC,EAFE,kBAAMxB,EAAAC,EAAAC,cAACoB,EAAD,ouBCIvB,IAAMG,EAAavD,IAAOC,IAAVuD,KA6HDC,EA3EE,SAACpD,GAAU,IAExBC,EAQED,EARFC,KACAoD,EAOErD,EAPFqD,YACAC,EAMEtD,EANFsD,gBACAC,EAKEvD,EALFuD,aACAC,EAIExD,EAJFwD,MACAC,EAGEzD,EAHFyD,SACAC,EAEE1D,EAFF0D,UACAC,EACE3D,EADF2D,cAEF,OACElC,EAAAC,EAAAC,cAACuB,EAAD,KACY,UAATjD,GACCwB,EAAAC,EAAAC,cAAA,UAAQC,KAAK,SAASC,QAASwB,GAC7B5B,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAiBC,KAAM6B,QAInB,UAAT3D,GACCwB,EAAAC,EAAAC,cAAA,UAAQC,KAAK,SAASC,QAASyB,GAC7B7B,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAiBC,KAAM8B,QAKnB,SAAT5D,GACCwB,EAAAC,EAAAC,cAAA,UAAQC,KAAK,UACXH,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAiBC,KAAM+B,IAAYjC,QAAS2B,MAIxC,SAATvD,GACCwB,EAAAC,EAAAC,cAAA,UAAQC,KAAK,UACXH,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAiBC,KAAMgC,IAAclC,QAAS4B,MAI1C,SAATxD,GACCwB,EAAAC,EAAAC,cAAA,UAAQC,KAAK,SAASC,QAAS0B,GAC7B9B,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAiBC,KAAMiC,QAKnB,aAAT/D,GACCwB,EAAAC,EAAAC,cAAA,UAAQC,KAAK,UACXH,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAiBC,KAAMkC,IAAapC,QAAS6B,MAIzC,aAATzD,GACCwB,EAAAC,EAAAC,cAAA,UAAQC,KAAK,UACXH,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAiBC,KAAMmC,IAAWrC,QAAS8B,MAIvC,aAAT1D,GACCwB,EAAAC,EAAAC,cAAA,UAAQC,KAAK,SAASC,QAAS0B,GAC7B9B,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAiBC,KAAMoC,mNCjInC,IAAMC,EAAUzE,IAAOC,IAAVyE,KAeEC,EALC,SAACtE,GAAU,IACjBuE,EAAUvE,EAAVuE,MACR,OAAO9C,EAAAC,EAAAC,cAACyC,EAAD,CAASvC,QAAS0C,wyCCT3B,IAAMC,EAAS7E,IAAOC,IAAV6E,KAsCNC,EAAc/E,IAAOU,OAAVsE,KAqDFC,EAvBA,SAAC5E,GAAU,IAChB6E,EAA6B7E,EAA7B6E,MAAOC,EAAsB9E,EAAtB8E,QAASC,EAAa/E,EAAb+E,SACxB,OACEtD,EAAAC,EAAAC,cAAAF,EAAAC,EAAAsD,SAAA,KACEvD,EAAAC,EAAAC,cAACsD,EAAD,CAASV,MAAOM,IAChBpD,EAAAC,EAAAC,cAAC6C,EAAD,KACE/C,EAAAC,EAAAC,cAAA,QAAMuD,SAAU,SAAAC,GAAC,OAAIL,EAAQK,KAC3B1D,EAAAC,EAAAC,cAAA,UAAKoD,GACLtD,EAAAC,EAAAC,cAAA,SAAOC,KAAK,OAAOT,KAAK,gBACxBM,EAAAC,EAAAC,cAAA,UAAQC,KAAK,UACXH,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAiBC,KAAMiC,QAG3BvC,EAAAC,EAAAC,cAAC+C,EAAD,CAAa9C,KAAK,SAASC,QAASgD,GAClCpD,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAiBC,KAAMC,sQCtFnC,IAAMoD,EAASzF,IAAOC,IAAVyF,KAwBGC,GAXA,SAAAtF,GAAK,OAClByB,EAAAC,EAAAC,cAACyD,EAAD,KACE3D,EAAAC,EAAAC,cAAA,6DAEG,IACDF,EAAAC,EAAAC,cAAA,QAAME,QAAS7B,EAAMuF,aAArB,wBAHF,y6ECZJ,IAAMC,GAAoB7F,IAAOC,IAAV6F,MAgBjBC,GAA0B/F,IAAOU,OAAVsF,MA2BvBC,GAAUjG,IAAOC,IAAViG,MAKPC,GAAanG,IAAOC,IAAVmG,MAmCVC,GAAQrG,IAAOC,IAAVqG,MAQLC,GAAavG,IAAOC,IAAVuG,MAQVC,GAAczG,IAAOC,IAAVyG,MAIXC,GAAgB3G,IAAOC,IAAV2G,MAwEJC,8MAzDbC,MAAQ,CACNpF,WAAY,KAGdqF,gBAAkB,SAACC,GACjB,IAAItF,EAAasF,EACbtF,EAAa,IACfA,EAAa,GAEXA,EAAa,MACfA,EAAa,KAEfuF,EAAKC,SAAS,CACZxF,wFAIK,IAAAyF,EAAAC,KAAAC,EAGHD,KAAK/G,MADPoB,EAFK4F,EAEL5F,GAAI6F,EAFCD,EAEDC,sBAAuBC,EAFtBF,EAEsBE,cAAe3E,EAFrCyE,EAEqCzE,OAEpClB,EAAe0F,KAAKN,MAApBpF,WAEFH,EAAQqB,EAAO4E,OAAO,SAAAvE,GAAE,OAAIA,EAAGxB,KAAOA,IAAI,GAE1CgG,EAAeC,OAAAC,EAAA,EAAAD,CAAIE,MAAM,KAAKC,QAAQ7E,IAAI,SAAAC,GAAE,OAAInB,EAAAC,EAAAC,cAACyE,GAAD,CAAatD,IAAKF,GAAKA,KAE7E,OACEnB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAsD,SAAA,KACEvD,EAAAC,EAAAC,cAACsD,EAAD,CAASV,MAAO0C,IAChBxF,EAAAC,EAAAC,cAAC6D,GAAD,KACE/D,EAAAC,EAAAC,cAAA,kCAAA8F,OAEOvG,EAAMC,OAEbM,EAAAC,EAAAC,cAACiE,GAAD,KACEnE,EAAAC,EAAAC,cAACmE,GAAD,MACArE,EAAAC,EAAAC,cAAC2E,GAAD,KAAgBjF,GAChBI,EAAAC,EAAAC,cAACqE,GAAD,CACE0B,SAAU,SAACvC,GACT2B,EAAKJ,gBAAgBiB,KAAKC,MAAMzC,EAAE0C,OAAOC,WAAa,OAGxDrG,EAAAC,EAAAC,cAACuE,GAAD,KAAakB,KAGjB3F,EAAAC,EAAAC,cAAC+D,GAAD,CAAyB9D,KAAK,SAASC,QAAS,kBAAMqF,EAAc9F,EAAIC,KACtEI,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAiBC,KAAMiC,iBAjDL+D,IAAMC,6LClHtC,IAAMC,GAAetI,IAAOC,IAAVsI,MA6OHC,8MApOb1B,MAAQ,CACNlE,OAAQ,CACN,CACEnB,GAAI,EACJD,KAAM,SACNE,WAAY,GAEd,CACED,GAAI,EACJD,KAAM,QACNE,WAAY,GAEd,CACED,GAAI,EACJD,KAAM,cACNE,WAAY,GAEd,CACED,GAAI,EACJD,KAAM,OACNE,WAAY,GAEd,CACED,GAAI,EACJD,KAAM,OACNE,WAAY,GAEd,CACED,GAAI,EACJD,KAAM,QACNE,WAAY,GAEd,CACED,GAAI,EACJD,KAAM,YACNE,WAAY,IAGhB+G,gBAAgB,EAChBC,mBAAmB,EACnBC,oBAAqB,KAErBrI,KAAM,WASRsI,YAAc,WAEZ3B,EAAKC,SAAS,CACZtE,OAFa,QAMjBiG,wBAA0B,WAsCxB5B,EAAKC,SAAS,CAAEtE,OArCD,CACb,CACEnB,GAAI,EACJD,KAAM,SACNE,WAAY,GAEd,CACED,GAAI,EACJD,KAAM,QACNE,WAAY,GAEd,CACED,GAAI,EACJD,KAAM,cACNE,WAAY,GAEd,CACED,GAAI,EACJD,KAAM,OACNE,WAAY,GAEd,CACED,GAAI,EACJD,KAAM,OACNE,WAAY,GAEd,CACED,GAAI,EACJD,KAAM,QACNE,WAAY,GAEd,CACED,GAAI,EACJD,KAAM,WACNE,WAAY,IAGQpB,KAAM,aAGhCwI,uBAAyB,WACvB7B,EAAKC,SAAS,SAAA6B,GAAS,MAAK,CAC1BN,gBAAiBM,EAAUN,qBAI/BO,eAAiB,SAACxD,GAChBA,EAAEyD,iBACFhC,EAAK6B,yBACL,IAAMvH,EAAQ,CACZE,GAAIyH,KAAKC,MACT3H,KAAMgE,EAAE0C,OAAOkB,YAAY9G,MAC3BZ,WAAY,GAERkB,EAAM8E,OAAAC,EAAA,EAAAD,CAAOT,EAAKH,MAAMlE,QAC9BA,EAAOyG,KAAK9H,GACZ0F,EAAKC,SAAS,CACZtE,cAIJ0G,gBAAkB,SAAC9G,EAAOf,GACxB,IAAMmB,EAAS8E,OAAAC,EAAA,EAAAD,CAAIT,EAAKH,MAAMlE,QAAQ4E,OAAO,SAACjG,GAI5C,OAHIA,EAAME,KAAOA,IACfF,EAAMC,KAAOgB,EAAM0F,OAAO5F,OAErBf,IAET0F,EAAKC,SAAS,CACZtE,cAIJ2G,kBAAoB,SAAC9H,GACnB,IAAMmB,EAAS8E,OAAAC,EAAA,EAAAD,CAAIT,EAAKH,MAAMlE,QAAQ4E,OAAO,SAACjG,GAC5C,OAAIA,EAAME,KAAOA,GACRF,IAIX0F,EAAKC,SAAS,CACZtE,cAIJ4G,gCAAkC,SAAC/H,GACjCwF,EAAKC,SAAS,SAAA6B,GAAS,MAAK,CAC1BL,mBAAoBK,EAAUL,kBAC9BC,oBAAqBI,EAAUL,kBAAoB,KAAOjH,QAI9D8F,cAAgB,SAAC9F,EAAIC,GAGnB,IAAMkB,EAAS8E,OAAAC,EAAA,EAAAD,CAAIT,EAAKH,MAAMlE,QAAQ4E,OAAO,SAACjG,GAI5C,OAHIA,EAAME,KAAOA,IACfF,EAAMG,WAAaA,GAEdH,IAET0F,EAAKC,SAAS,CACZtE,WAGFqE,EAAKuC,qCAGPC,gBAAkB,WAChBC,QAAQC,IAAI,gCAGdC,oBAAsB,WACpBF,QAAQC,IAAI,yGA/HNrJ,GACN8G,KAAKF,SAAS,CACZ5G,0CAkIK,IAAA6G,EAAAC,KAAAyC,EAGHzC,KAAKN,MADPlE,EAFKiH,EAELjH,OAAQtC,EAFHuJ,EAEGvJ,KAAMmI,EAFToB,EAESpB,eAAgBC,EAFzBmB,EAEyBnB,kBAAmBC,EAF5CkB,EAE4ClB,oBAG7CmB,EAAU,CAAC,MAAD,QAAAhC,OAAgBxH,IAEhC,OACEwB,EAAAC,EAAAC,cAACsG,GAAD,CAAcyB,UAAWD,EAAQE,KAAK,MACpClI,EAAAC,EAAAC,cAACiI,EAAD,MAEmB,IAAlBrH,EAAOsH,QAAgBpI,EAAAC,EAAAC,cAACmI,GAAD,CAAQvE,YAAawB,KAAKyB,0BAEjDJ,GACC3G,EAAAC,EAAAC,cAACoI,EAAD,CAAQlF,MAAOkC,KAAK0B,uBAAwB3D,QAASiC,KAAK4B,gBAA1D,kBAKFlH,EAAAC,EAAAC,cAACqI,EAAD,CACEzH,OAAQA,EACRtC,KAAMA,EACNsB,UAAWwF,KAAKkC,gBAChBzH,YAAauF,KAAKmC,kBAClB5H,sBAAuByF,KAAKoC,kCAG7Bd,GACC5G,EAAAC,EAAAC,cAACsI,GAAD,CACE7I,GAAIkH,EACJrB,sBAAuBF,KAAKoC,gCAC5BjC,cAAeH,KAAKG,cACpB3E,OAAQA,IAIZd,EAAAC,EAAAC,cAACuI,EAAD,CACEjK,KAAMA,EACNsD,aAAc,kBAAMuD,EAAKqD,QAAQ,UACjC9G,YAAa,kBAAMyD,EAAKqD,QAAQ,SAChC7G,gBAAiB,kBAAMwD,EAAKqD,QAAQ,aACpC3G,MAAOuD,KAAKwB,YACZ9E,SAAUsD,KAAK0B,uBACf/E,UAAWqD,KAAKqC,gBAChBzF,cAAeoD,KAAKwC,8BA9NZvB,aCNEoC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOjJ,EAAAC,EAAAC,cAACgJ,GAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.1fde859d.chunk.js","sourcesContent":["import React from 'react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\n\nimport styled, { css } from 'styled-components';\n\nconst ActorRow = styled.div`\n  position: relative;\n  width: 100%;\n  margin: 0.5rem 0;\n`;\n\nconst ActorRowInner = styled.div`\n  position: relative;\n  left: 0;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin: 0 1rem;\n  padding: 0.25rem 0.5rem 0.25rem 0.25rem;\n  background: #efefef;\n  border-radius: 0.25rem;\n  transition: 0.25s;\n\n  ${props => props.mode === 'edit'\n    && css`\n      left: 2rem;\n    `}\n`;\n\nconst ButtonRemoveActor = styled.button`\n  position: absolute;\n  top: 50%;\n  left: -1rem;\n  border: 0;\n  padding: 0.5rem;\n  background: transparent;\n  color: red;\n  opacity: 1;\n  transform: translate(-50%, -50%) scale(1);\n  cursor: pointer;\n  transition: 0.25s;\n\n  ${props => props.mode === 'edit'\n    && css`\n      left: 1.5rem;\n      opacity: 1;\n    `}\n`;\n\nconst ActorName = styled.input`\n  background: transparent;\n  // color: black;\n  border: 1px solid transparent;\n  transition: 0.25s;\n  padding: 0.25rem;\n  border-radius: 0.25rem;\n  box-shadow: none;\n  -webkit-appearance: none;\n\n  &[disabled] {\n    color: black;\n  }\n\n  ${props => props.mode === 'edit'\n    && css`\n      background: rgba(255, 255, 255, 0.5);\n      border: 1px solid rgba(0, 0, 0, 0.5);\n    `}\n`;\n\nconst ActorNameScreen = styled.div`\n  position: absolute;\n  left: 0;\n  top: 0;\n  z-index: 10;\n  width: 100%;\n  height: 100%;\n`;\n\nconst ActorInitiative = styled.div`\n  font-size: 1.25rem;\n`;\n\nconst ButtonSetInitiative = styled.button`\n  position: absolute;\n  z-index: 15;\n  overflow: hidden;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: transparent;\n  border: 0;\n\n  span {\n    position: absolute;\n    bottom: 110%;\n    right: 110%;\n  }\n`;\n\nconst actor = (props) => {\n  const {\n    mode, name, id, initiative, showInitiativeSpinner, editActor, removeActor,\n  } = props;\n\n  return (\n    <ActorRow mode={mode}>\n      <ButtonRemoveActor type=\"button\" onClick={() => removeActor(id)} mode={mode}>\n        <FontAwesomeIcon icon={faTimesCircle} />\n      </ButtonRemoveActor>\n      <ActorRowInner mode={mode}>\n        <ActorName type=\"text\" value={name} onChange={event => editActor(event, id)} mode={mode} />\n\n        <ActorInitiative>\n          <span>{initiative}</span>\n        </ActorInitiative>\n\n        {mode !== 'edit' && <ActorNameScreen />}\n\n        {mode === 'input' && (\n          <ButtonSetInitiative type=\"button\" onClick={() => showInitiativeSpinner(id)}>\n            <span>Set initiative</span>\n          </ButtonSetInitiative>\n        )}\n      </ActorRowInner>\n    </ActorRow>\n  );\n};\n\nexport default actor;\n","import React from 'react';\n\nimport styled from 'styled-components';\n\nimport Actor from './Actor';\n\nconst ActorList = styled.div`\n  margin: 1rem 0;\n`;\n\nconst actorList = (props) => {\n  let { actors } = props;\n  const {\n    mode, showInitiativeSpinner, removeActor, editActor,\n  } = props;\n\n  if (mode !== 'tracking') {\n    actors = actors.sort((a, b) => {\n      if (a.name.toLowerCase() < b.name.toLowerCase()) return -1;\n      if (a.name.toLowerCase() > b.name.toLowerCase()) return 1;\n      return 0;\n    });\n  } else {\n    actors = actors.sort((a, b) => {\n      if (a.initiative > b.initiative) return -1;\n      if (a.initiative < b.initiative) return 1;\n      return 0;\n    });\n  }\n\n  actors = actors.map(el => (\n    <Actor\n      key={el.id}\n      id={el.id}\n      name={el.name}\n      initiative={el.initiative}\n      mode={mode}\n      showInitiativeSpinner={showInitiativeSpinner}\n      removeActor={removeActor}\n      editActor={editActor}\n    />\n  ));\n\n  return <ActorList>{actors}</ActorList>;\n};\n\nexport default actorList;\n","import React from 'react';\n\nimport styled from 'styled-components';\n\nconst Titlebar = styled.div`\n  background: black;\n  color: white;\n  padding: 0.5em 0;\n  text-align: center;\n  box-shadow: 0 0 0.5rem rgba(0, 0, 0, 0.25);\n`;\n\nconst titlebar = () => <Titlebar>Hoi, fragger!</Titlebar>;\n\nexport default titlebar;\n","import React from 'react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faTrashAlt,\n  faPen,\n  faPlusSquare,\n  faCheck,\n  faArrowDown,\n  faArrowUp,\n  faPlay,\n  faStop,\n} from '@fortawesome/free-solid-svg-icons';\n\nimport styled from 'styled-components';\n\nconst ControlBar = styled.div`\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 0.25rem;\n  background: white;\n  box-shadow: 0 0 0.5rem rgba(0, 0, 0, 0.25);\n\n  button {\n    position: relative;\n    width: 3rem;\n    margin: 0 1rem;\n    padding: 0;\n    background: black;\n    border-radius: 100px\n    border: 0;\n    color: white;\n\n    &:before {\n      content: '';\n      display: block;\n      width: 100%;\n      padding-top: 100%;\n    }\n\n    span {\n      position: absolute;\n      top: 50%;\n      left: 50%;\n      transform: translate(-50%, -50%);\n    }\n  }\n`;\n\n// const Button = styled.button``;\n\n// const ButtonBar = styled(Button)``;\n\n// const ButtonLarge = styled(Button)``;\n\n// const ButtonAddActor = styled(ButtonLarge)``;\n// const ButtonReset = styled(Button)``;\n\n// const ButtonNextActor = styled(ButtonLarge)``;\n// const ButtonPreviousActor = styled(Button)``;\n\nconst controls = (props) => {\n  const {\n    mode,\n    setModeEdit,\n    setModeTracking,\n    setModeInput,\n    reset,\n    addActor,\n    nextActor,\n    previousActor,\n  } = props;\n  return (\n    <ControlBar>\n      {mode === 'input' && (\n        <button type=\"button\" onClick={setModeEdit}>\n          <span>\n            <FontAwesomeIcon icon={faPen} />\n          </span>\n        </button>\n      )}\n      {mode === 'input' && (\n        <button type=\"button\" onClick={setModeTracking}>\n          <span>\n            <FontAwesomeIcon icon={faPlay} />\n          </span>\n        </button>\n      )}\n\n      {mode === 'edit' && (\n        <button type=\"button\">\n          <span>\n            <FontAwesomeIcon icon={faTrashAlt} onClick={reset} />\n          </span>\n        </button>\n      )}\n      {mode === 'edit' && (\n        <button type=\"button\">\n          <span>\n            <FontAwesomeIcon icon={faPlusSquare} onClick={addActor} />\n          </span>\n        </button>\n      )}\n      {mode === 'edit' && (\n        <button type=\"button\" onClick={setModeInput}>\n          <span>\n            <FontAwesomeIcon icon={faCheck} />\n          </span>\n        </button>\n      )}\n\n      {mode === 'tracking' && (\n        <button type=\"button\">\n          <span>\n            <FontAwesomeIcon icon={faArrowDown} onClick={nextActor} />\n          </span>\n        </button>\n      )}\n      {mode === 'tracking' && (\n        <button type=\"button\">\n          <span>\n            <FontAwesomeIcon icon={faArrowUp} onClick={previousActor} />\n          </span>\n        </button>\n      )}\n      {mode === 'tracking' && (\n        <button type=\"button\" onClick={setModeInput}>\n          <span>\n            <FontAwesomeIcon icon={faStop} />\n          </span>\n        </button>\n      )}\n    </ControlBar>\n  );\n};\n\nexport default controls;\n","import React from 'react';\n\nimport styled from 'styled-components';\n\nconst Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 999;\n  width: 100vw;\n  height: 100vh;\n  background: rgba(0, 0, 0, 0.7);\n`;\n\nconst overlay = (props) => {\n  const { click } = props;\n  return <Overlay onClick={click} />;\n};\n\nexport default overlay;\n","import React from 'react';\n\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimesCircle, faCheck } from '@fortawesome/free-solid-svg-icons';\nimport Overlay from './Overlay';\n\nconst Prompt = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  z-index: 1000;\n  transform: translate(-50%, -50%);\n  width: 80vmin;\n  background: white;\n  padding: 0 0 1rem 0;\n  border-radius: 0.25rem;\n\n  h3 {\n    font-size: 1rem;\n    font-weight: bold;\n    margin: 0 0 1rem;\n    padding: 0.5rem;\n    background: rgba(0, 0, 0, 0.25);\n  }\n\n  input {\n    display: block;\n    border: 1px solid rgba(0, 0, 0, 0.25);\n    width: calc(100% - 2rem);\n    margin: 1rem auto;\n    padding: 0.5rem;\n    text-align: center;\n  }\n\n  form button {\n    display: block;\n    width: 4rem;\n    background: rgba(0, 0, 0, 0.25);\n    margin: 0 1rem 0 auto;\n    padding: 0.5rem;\n    border: 0;\n  }\n`;\n\nconst CloseButton = styled.button`\n  position: absolute;\n  display: block;\n  top: -0.75rem;\n  right: -0.75rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 100px;\n  background: white;\n  font-size: 1.5rem;\n  padding: 0.25rem;\n  width: 2rem;\n  border: 0;\n\n  &:before {\n    content: '';\n    display: block;\n    width: 100%;\n    padding-top: 100%;\n  }\n\n  span {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n  }\n`;\n\nconst prompt = (props) => {\n  const { close, confirm, children } = props;\n  return (\n    <>\n      <Overlay click={close} />\n      <Prompt>\n        <form onSubmit={e => confirm(e)}>\n          <h3>{children}</h3>\n          <input type=\"text\" name=\"promptInput\" />\n          <button type=\"submit\">\n            <FontAwesomeIcon icon={faCheck} />\n          </button>\n        </form>\n        <CloseButton type=\"button\" onClick={close}>\n          <span>\n            <FontAwesomeIcon icon={faTimesCircle} />\n          </span>\n        </CloseButton>\n      </Prompt>\n    </>\n  );\n};\n\nexport default prompt;\n","import React from 'react';\n\nimport styled from 'styled-components';\n\nconst Splash = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 75vh;\n  padding: 0 1rem;\n  text-align: center;\n\n  span {\n    text-decoration: underline;\n  }\n`;\n\nconst splash = props => (\n  <Splash>\n    <p>\n      Add some actors. Click edit to add one by one, or\n      {' '}\n      <span onClick={props.loadDefault}>load the default set</span>\n.\n    </p>\n  </Splash>\n);\n\nexport default splash;\n","import React from 'react';\n\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck } from '@fortawesome/free-solid-svg-icons';\nimport Overlay from './Overlay';\n\nconst InitiativeSpinner = styled.div`\n  position: absolute;\n  z-index: 1000;\n  top: 50%;\n  left: 0;\n  width: 100%;\n  padding: 1rem 0;\n  background: white;\n  text-align: center;\n  transform: translateY(-50%);\n\n  h3 {\n    margin: 0 0 1rem;\n  }\n`;\n\nconst ButtonConfirmInitiative = styled.button`\n  position: absolute;\n  top: calc(100% + 1rem);\n  left: 50%;\n  width: 4rem;\n  padding: 0;\n  border: 0;\n  border-radius: 100px;\n  background: white;\n  font-size: 1.25rem;\n  transform: translateX(-50%);\n\n  &:before {\n    content: '';\n    display: block;\n    width: 100%;\n    padding-top: 100%;\n  }\n\n  span {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n  }\n`;\n\nconst Spinner = styled.div`\n  position: relative;\n  width: 100vw;\n`;\n\nconst Indicators = styled.div`\n  position: absolute;\n  z-index: 5;\n  top: 0;\n  left: 50%;\n  width: 75%;\n  height: 100%;\n  transform: translateX(-50%);\n  border-top: 1px solid black;\n  border-bottom: 1px solid black;\n\n  &:before,\n  &:after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 50%;\n    width: 0;\n    height: 0;\n    border-right: 0.25rem solid transparent;\n    border-left: 0.25rem solid transparent;\n    border-top: 2rem solid black;\n    transform: translateX(-50%);\n  }\n\n  &:after {\n    top: auto;\n    bottom: 0;\n    border-top: 0;\n    border-right: 0.25rem solid transparent;\n    border-left: 0.25rem solid transparent;\n    border-bottom: 2rem solid black;\n  }\n`;\n\nconst Track = styled.div`\n  position: relative;\n  z-index: 10;\n  width: 100vw;\n  overflow-x: scroll;\n  -webkit-overflow-scrolling: touch;\n`;\n\nconst TrackInner = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: calc(101 * 2rem + 100vw);\n  padding: 2rem 50vw;\n`;\n\nconst TrackNumber = styled.div`\n  width: 2rem;\n`;\n\nconst CurrentNumber = styled.div`\n  position: absolute;\n  z-index: 15;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  width: 3rem;\n  border: 2px solid black;\n  border-radius: 0.25rem;\n  background: white;\n  padding: 0.5rem 0;\n  font-size 1.25rem;\n`;\n\nclass initiativeSpinner extends React.Component {\n  state = {\n    initiative: 0,\n  };\n\n  storeInitiative = (i) => {\n    let initiative = i;\n    if (initiative < 0) {\n      initiative = 0;\n    }\n    if (initiative > 100) {\n      initiative = 100;\n    }\n    this.setState({\n      initiative,\n    });\n  };\n\n  render() {\n    const {\n      id, hideInitiativeSpinner, setInitiative, actors,\n    } = this.props;\n    const { initiative } = this.state;\n\n    const actor = actors.filter(el => el.id === id)[0];\n\n    const tracknumbers = [...Array(101).keys()].map(el => <TrackNumber key={el}>{el}</TrackNumber>);\n\n    return (\n      <>\n        <Overlay click={hideInitiativeSpinner} />\n        <InitiativeSpinner>\n          <h3>\n            Set initiative of\n            {` ${actor.name}`}\n          </h3>\n          <Spinner>\n            <Indicators />\n            <CurrentNumber>{initiative}</CurrentNumber>\n            <Track\n              onScroll={(e) => {\n                this.storeInitiative(Math.floor(e.target.scrollLeft / 32));\n              }}\n            >\n              <TrackInner>{tracknumbers}</TrackInner>\n            </Track>\n          </Spinner>\n          <ButtonConfirmInitiative type=\"button\" onClick={() => setInitiative(id, initiative)}>\n            <span>\n              <FontAwesomeIcon icon={faCheck} />\n            </span>\n          </ButtonConfirmInitiative>\n        </InitiativeSpinner>\n      </>\n    );\n  }\n}\n\nexport default initiativeSpinner;\n","import React, { Component } from 'react';\n\nimport styled from 'styled-components';\nimport Actors from './components/Actors';\nimport Titlebar from './components/Titlebar';\nimport Controls from './components/Controls';\nimport Prompt from './components/Prompt';\nimport Splash from './components/Splash';\nimport InitiativeSpinner from './components/InitiativeSpinner';\n\nconst AppContainer = styled.div`\n  position: relative;\n  height: 100vh;\n  overflow: hidden;\n  overflow-y: auto;\n  padding: 0 0 3rem;\n`;\n\nclass App extends Component {\n  state = {\n    actors: [\n      {\n        id: 0,\n        name: 'vand4l',\n        initiative: 0,\n      },\n      {\n        id: 1,\n        name: 'Flick',\n        initiative: 0,\n      },\n      {\n        id: 2,\n        name: 'Chrome Blue',\n        initiative: 0,\n      },\n      {\n        id: 3,\n        name: 'Edge',\n        initiative: 0,\n      },\n      {\n        id: 4,\n        name: 'Plug',\n        initiative: 0,\n      },\n      {\n        id: 5,\n        name: 'Pomph',\n        initiative: 0,\n      },\n      {\n        id: 6,\n        name: 'The Enemy',\n        initiative: 0,\n      },\n    ],\n    addingNewActor: false,\n    settingInitiative: false,\n    settingInitiativeOf: null,\n    // current: null,\n    mode: 'input',\n  };\n\n  setMode(mode) {\n    this.setState({\n      mode,\n    });\n  }\n\n  handleReset = () => {\n    const actors = [];\n    this.setState({\n      actors,\n    });\n  };\n\n  handleLoadDefaultActors = () => {\n    const actors = [\n      {\n        id: 0,\n        name: 'vand4l',\n        initiative: 0,\n      },\n      {\n        id: 1,\n        name: 'Flick',\n        initiative: 0,\n      },\n      {\n        id: 2,\n        name: 'Chrome Blue',\n        initiative: 0,\n      },\n      {\n        id: 3,\n        name: 'Edge',\n        initiative: 0,\n      },\n      {\n        id: 4,\n        name: 'Plug',\n        initiative: 0,\n      },\n      {\n        id: 5,\n        name: 'Pomph',\n        initiative: 0,\n      },\n      {\n        id: 6,\n        name: 'Bad Guys',\n        initiative: 0,\n      },\n    ];\n    this.setState({ actors, mode: 'input' });\n  };\n\n  handleShowHideAddActor = () => {\n    this.setState(prevState => ({\n      addingNewActor: !prevState.addingNewActor,\n    }));\n  };\n\n  handleAddActor = (e) => {\n    e.preventDefault();\n    this.handleShowHideAddActor();\n    const actor = {\n      id: Date.now(),\n      name: e.target.promptInput.value,\n      initiative: 0,\n    };\n    const actors = [...this.state.actors];\n    actors.push(actor);\n    this.setState({\n      actors,\n    });\n  };\n\n  handleEditActor = (event, id) => {\n    const actors = [...this.state.actors].filter((actor) => {\n      if (actor.id === id) {\n        actor.name = event.target.value;\n      }\n      return actor;\n    });\n    this.setState({\n      actors,\n    });\n  };\n\n  handleRemoveActor = (id) => {\n    const actors = [...this.state.actors].filter((actor) => {\n      if (actor.id !== id) {\n        return actor;\n      }\n      return false;\n    });\n    this.setState({\n      actors,\n    });\n  };\n\n  handleShowHideInitiativeSpinner = (id) => {\n    this.setState(prevState => ({\n      settingInitiative: !prevState.settingInitiative,\n      settingInitiativeOf: prevState.settingInitiative ? null : id,\n    }));\n  };\n\n  setInitiative = (id, initiative) => {\n    // console.log(`Setting initiative of ${id} to ${initiative}`);\n\n    const actors = [...this.state.actors].filter((actor) => {\n      if (actor.id === id) {\n        actor.initiative = initiative;\n      }\n      return actor;\n    });\n    this.setState({\n      actors,\n    });\n\n    this.handleShowHideInitiativeSpinner();\n  };\n\n  handleNextActor = () => {\n    console.log('Set next actor to current');\n  };\n\n  handlePreviousActor = () => {\n    console.log('Set previous actor to current');\n  };\n\n  handle;\n\n  render() {\n    const {\n      actors, mode, addingNewActor, settingInitiative, settingInitiativeOf,\n    } = this.state;\n\n    const classes = ['App', `App--${mode}`];\n\n    return (\n      <AppContainer className={classes.join(' ')}>\n        <Titlebar />\n\n        {actors.length === 0 && <Splash loadDefault={this.handleLoadDefaultActors} />}\n\n        {addingNewActor && (\n          <Prompt close={this.handleShowHideAddActor} confirm={this.handleAddActor}>\n            Name of actor:\n          </Prompt>\n        )}\n\n        <Actors\n          actors={actors}\n          mode={mode}\n          editActor={this.handleEditActor}\n          removeActor={this.handleRemoveActor}\n          showInitiativeSpinner={this.handleShowHideInitiativeSpinner}\n        />\n\n        {settingInitiative && (\n          <InitiativeSpinner\n            id={settingInitiativeOf}\n            hideInitiativeSpinner={this.handleShowHideInitiativeSpinner}\n            setInitiative={this.setInitiative}\n            actors={actors}\n          />\n        )}\n\n        <Controls\n          mode={mode}\n          setModeInput={() => this.setMode('input')}\n          setModeEdit={() => this.setMode('edit')}\n          setModeTracking={() => this.setMode('tracking')}\n          reset={this.handleReset}\n          addActor={this.handleShowHideAddActor}\n          nextActor={this.handleNextActor}\n          previousActor={this.handlePreviousActor}\n        />\n      </AppContainer>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}