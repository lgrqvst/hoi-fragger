{"version":3,"sources":["media/bulge.svg","components/Actor.js","components/Actors.js","components/Titlebar.js","components/Controls.js","components/Overlay.js","components/Prompt.js","components/Splash.js","components/InitiativeSpinner.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ActorRow","styled","div","ActorRowInner","props","mode","css","current","willgo","went","ButtonRemoveActor","button","ActorName","input","ActorNameScreen","ActorInitiative","ButtonSetInitiative","actor","name","id","initiative","showInitiativeSpinner","editActor","removeActor","type","onClick","icon","faTimesCircle","value","onChange","event","ActorList","actorList","actors","sort","a","b","toLowerCase","filter","map","el","Actor","key","Titlebar","titlebar","transitionTiming","ControlBar","bulge","Button","ButtonBar","ButtonLarge","ButtonAddActor","ButtonReset","ButtonSoftReset","ButtonNextActor","ButtonPreviousActor","ButtonNextRound","ButtonPreviousRound","controls","setModeEdit","setModeTracking","setModeInput","reset","softReset","addActor","nextActor","previousActor","nextTurn","previousTurn","faPen","faHandPeace","faPlay","faTrashAlt","faPlusSquare","faEraser","faArrowDown","faArrowUp","faArrowAltCircleRight","faArrowAltCircleLeft","Overlay","overlay","click","Prompt","prompt","close","confirm","children","onSubmit","e","faCheck","Splash","LoadDefault","splash","msg","loadDefault","InitiativeSpinner","ButtonConfirmInitiative","Spinner","Indicators","Track","TrackInner","TrackNumber","CurrentNumber","initiativeSpinner","state","storeInitiative","i","setState","scrollRef","React","createRef","this","scrollLeft","hideInitiativeSpinner","setInitiative","tracknumbers","Array","keys","ref","onScroll","Math","floor","target","Component","GlobalStyle","createGlobalStyle","AppContainer","App","addingNewActor","settingInitiative","settingInitiativeOf","handleReset","localStorage","clear","handleSoftReset","setItem","JSON","stringify","handleLoadStoredActors","parse","handleLoadDefaultActors","handleShowHideAddActor","prevState","handleAddActor","preventDefault","Date","now","promptInput","push","handleEditActor","handleRemoveActor","handleShowHideInitiativeSpinner","handleNextActor","actorsAbove0","validActors","length","setMode","next","handleNextTurn","handlePreviousActor","previous","handlePreviousTurn","handleNewTurn","Actors","Controls","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oGAAAA,EAAOC,QAAU,IAA0B,mC,wgFCO3C,IAAMC,EAAWC,IAAOC,IAAV,KAMRC,EAAgBF,IAAOC,IAAV,KAaf,SAAAE,GAAK,MAAmB,SAAfA,EAAMC,MACZC,YADM,QAKT,SAAAF,GAAK,OAAsB,IAAlBA,EAAMG,SACZD,YADM,QAKT,SAAAF,GAAK,OAAqB,IAAjBA,EAAMI,QAAmBF,YAAzB,QAET,SAAAF,GAAK,OAAmB,IAAfA,EAAMK,MACZH,YADM,QAMPI,EAAoBT,IAAOU,OAAV,KAanB,SAAAP,GAAK,MAAmB,SAAfA,EAAMC,MACZC,YADM,QAOPM,EAAYX,IAAOY,MAAV,KAcX,SAAAT,GAAK,MAAmB,SAAfA,EAAMC,MACZC,YADM,QAOPQ,EAAkBb,IAAOC,IAAV,KASfa,EAAkBd,IAAOC,IAAV,KAKfc,EAAsBf,IAAOU,OAAV,KAwDVM,EAtCD,SAACb,GAAW,IAEtBC,EAUED,EAVFC,KACAa,EASEd,EATFc,KACAC,EAQEf,EARFe,GACAC,EAOEhB,EAPFgB,WACAC,EAMEjB,EANFiB,sBACAC,EAKElB,EALFkB,UACAC,EAIEnB,EAJFmB,YACAhB,EAGEH,EAHFG,QACAE,EAEEL,EAFFK,KACAD,EACEJ,EADFI,OAGF,OACE,kBAACR,EAAD,CAAUK,KAAMA,GACd,kBAACK,EAAD,CAAmBc,KAAK,SAASC,QAAS,kBAAMF,EAAYJ,IAAKd,KAAMA,GACrE,kBAAC,IAAD,CAAiBqB,KAAMC,OAEzB,kBAACxB,EAAD,CAAeE,KAAMA,EAAME,QAASA,EAASC,OAAQA,EAAQC,KAAMA,GACjE,kBAACG,EAAD,CAAWY,KAAK,OAAOI,MAAOV,EAAMW,SAAU,SAAAC,GAAK,OAAIR,EAAUQ,EAAOX,IAAKd,KAAMA,IAEnF,kBAACU,EAAD,KACE,8BAAOK,IAGC,SAATf,GAAmB,kBAACS,EAAD,MAEV,UAATT,GACC,kBAACW,EAAD,CAAqBQ,KAAK,SAASC,QAAS,kBAAMJ,EAAsBF,KACtE,oD,yJC7IZ,IAAMY,EAAY9B,IAAOC,IAAV,KAgDA8B,EAzCG,SAAC5B,GAAW,IACtB6B,EAAW7B,EAAX6B,OAEJ5B,EACED,EADFC,KAAMgB,EACJjB,EADIiB,sBAAuBE,EAC3BnB,EAD2BmB,YAAaD,EACxClB,EADwCkB,UAAWf,EACnDH,EADmDG,QAmCvD,OAhBA0B,GAfEA,EADW,aAAT5B,EACO4B,EAAOC,MAAK,SAACC,EAAGC,GACvB,OAAID,EAAEjB,KAAKmB,cAAgBD,EAAElB,KAAKmB,eAAuB,EACrDF,EAAEjB,KAAKmB,cAAgBD,EAAElB,KAAKmB,cAAsB,EACjD,KAGAJ,EACNC,MAAK,SAACC,EAAGC,GACR,OAAID,EAAEf,WAAagB,EAAEhB,YAAoB,EACrCe,EAAEf,WAAagB,EAAEhB,WAAmB,EACjC,KAERkB,QAAO,SAAArB,GAAK,OAAIA,EAAMG,WAAa,MAGxBmB,KAAI,SAAAC,GAAE,OACpB,kBAACC,EAAD,CACEC,IAAKF,EAAGrB,GACRA,GAAIqB,EAAGrB,GACPD,KAAMsB,EAAGtB,KACTE,WAAYoB,EAAGpB,WACff,KAAMA,EACNgB,sBAAuBA,EACvBE,YAAaA,EACbD,UAAWA,EACXf,QAASiC,EAAGpB,aAAeb,EAC3BC,OAAQgC,EAAGpB,WAAab,GAAuB,OAAZA,EACnCE,KAAM+B,EAAGpB,WAAab,GAAuB,OAAZA,OAI9B,kBAACwB,EAAD,KAAYE,I,mWC/CrB,IAAMU,EAAW1C,IAAOC,IAAV,KAkBC0C,EAFE,kBAAM,kBAACD,EAAD,uB,wpHCDvB,IAAME,GAAmB,qCAEnBC,GAAa7C,IAAOC,IAAV,KAsBM6C,IACCF,IAGnB,SAAAzC,GAAK,MAAmB,SAAfA,EAAMC,MACZC,YADM,SAMT,SAAAF,GAAK,MAAmB,aAAfA,EAAMC,MACZC,YADM,SAQP0C,GAAS/C,IAAOU,OAAV,MA2BNsC,GAAYhD,YAAO+C,GAAP/C,CAAH,KAGW4C,IAEpB,SAAAzC,GAAK,MAAmB,SAAfA,EAAMC,MACZC,YADM,SAMT,SAAAF,GAAK,MAAmB,UAAfA,EAAMC,MACZC,YADM,SAMT,SAAAF,GAAK,MAAmB,aAAfA,EAAMC,MACZC,YADM,SAOT4C,GAAcjD,YAAO+C,GAAP/C,CAAH,MAKXkD,GAAiBlD,YAAOiD,GAAPjD,CAAH,KAIC4C,IACjB,SAAAzC,GAAK,MAAmB,SAAfA,EAAMC,MACZC,YADM,SAKP8C,GAAcnD,YAAO+C,GAAP/C,CAAH,KAGI4C,IACjB,SAAAzC,GAAK,MAAmB,SAAfA,EAAMC,MACZC,YADM,SAMP+C,GAAkBpD,YAAO+C,GAAP/C,CAAH,KAGC4C,IAClB,SAAAzC,GAAK,MAAmB,UAAfA,EAAMC,MACZC,YADM,SAMPgD,GAAkBrD,YAAOiD,GAAPjD,CAAH,IAIA4C,IACjB,SAAAzC,GAAK,MAAmB,aAAfA,EAAMC,MACZC,YADM,QAKPiD,GAAsBtD,YAAO+C,GAAP/C,CAAH,IAGJ4C,IACjB,SAAAzC,GAAK,MAAmB,aAAfA,EAAMC,MACZC,YADM,QAKPkD,GAAkBvD,YAAO+C,GAAP/C,CAAH,IAGC4C,IAClB,SAAAzC,GAAK,MAAmB,aAAfA,EAAMC,MACZC,YADM,QAMPmD,GAAsBxD,YAAO+C,GAAP/C,CAAH,IAGH4C,IAClB,SAAAzC,GAAK,MAAmB,aAAfA,EAAMC,MACZC,YADM,QAmFEoD,GA7EE,SAACtD,GAAW,IAEzBC,EAWED,EAXFC,KACAsD,EAUEvD,EAVFuD,YACAC,EASExD,EATFwD,gBACAC,EAQEzD,EARFyD,aACAC,EAOE1D,EAPF0D,MACAC,EAME3D,EANF2D,UACAC,EAKE5D,EALF4D,SACAC,EAIE7D,EAJF6D,UACAC,EAGE9D,EAHF8D,cACAC,EAEE/D,EAFF+D,SACAC,EACEhE,EADFgE,aAEF,OACE,oCACE,kBAACtB,GAAD,CAAYzC,KAAMA,GAChB,kBAAC4C,GAAD,CAAWzB,KAAK,SAASC,QAASkC,EAAatD,KAAMA,GACnD,8BACE,kBAAC,IAAD,CAAiBqB,KAAM2C,QAI3B,kBAACpB,GAAD,CAAWzB,KAAK,SAASC,QAASoC,EAAcxD,KAAMA,GACpD,8BACE,kBAAC,IAAD,CAAiBqB,KAAM4C,QAI3B,kBAACrB,GAAD,CAAWzB,KAAK,SAASC,QAASmC,EAAiBvD,KAAMA,GACvD,8BACE,kBAAC,IAAD,CAAiBqB,KAAM6C,SAK7B,kBAACnB,GAAD,CAAa5B,KAAK,SAASnB,KAAMA,EAAMoB,QAASqC,GAC9C,8BACE,kBAAC,IAAD,CAAiBpC,KAAM8C,QAG3B,kBAACrB,GAAD,CAAgB3B,KAAK,SAASnB,KAAMA,EAAMoB,QAASuC,GACjD,8BACE,kBAAC,IAAD,CAAiBtC,KAAM+C,QAI3B,kBAACpB,GAAD,CAAiB7B,KAAK,SAASnB,KAAMA,EAAMoB,QAASsC,GAClD,8BACE,kBAAC,IAAD,CAAiBrC,KAAMgD,QAI3B,kBAACpB,GAAD,CAAiB9B,KAAK,SAASnB,KAAMA,EAAMoB,QAASwC,GAClD,8BACE,kBAAC,IAAD,CAAiBvC,KAAMiD,QAG3B,kBAACpB,GAAD,CAAqB/B,KAAK,SAASnB,KAAMA,EAAMoB,QAASyC,GACtD,8BACE,kBAAC,IAAD,CAAiBxC,KAAMkD,QAG3B,kBAACpB,GAAD,CAAiBhC,KAAK,SAASnB,KAAMA,EAAMoB,QAAS0C,GAClD,8BACE,kBAAC,IAAD,CAAiBzC,KAAMmD,QAG3B,kBAACpB,GAAD,CAAqBjC,KAAK,SAASnB,KAAMA,EAAMoB,QAAS2C,GACtD,8BACE,kBAAC,IAAD,CAAiB1C,KAAMoD,U,2MC5PjC,IAAMC,GAAU9E,IAAOC,IAAV,MAeE8E,GALC,SAAC5E,GAAW,IAClB6E,EAAU7E,EAAV6E,MACR,OAAO,kBAACF,GAAD,CAAStD,QAASwD,K,0vBCT3B,IAAMC,GAASjF,IAAOC,IAAV,MAwDGiF,GAlBA,SAAC/E,GAAW,IACjBgF,EAA6BhF,EAA7BgF,MAAOC,EAAsBjF,EAAtBiF,QAASC,EAAalF,EAAbkF,SACxB,OACE,oCACE,kBAAC,GAAD,CAASL,MAAOG,IAChB,kBAACF,GAAD,KACE,0BAAMK,SAAU,SAAAC,GAAC,OAAIH,EAAQG,KAC3B,4BAAKF,GACL,2BAAO9D,KAAK,OAAON,KAAK,gBACxB,4BAAQM,KAAK,UACX,kBAAC,IAAD,CAAiBE,KAAM+D,W,6ZCnDnC,IAAMC,GAASzF,IAAOC,IAAV,MAeNyF,GAAc1F,IAAOkC,EAAV,MAsBFyD,GAjBA,SAACxF,GAAW,IACjBoB,EAASpB,EAAToB,KACJqE,EAAM,GAYV,MAXa,UAATrE,EACFqE,EACE,oFAEG,IACD,kBAACF,GAAD,CAAalE,QAASrB,EAAM0F,aAA5B,0BAGc,YAATtE,IACTqE,EAAM,iEAED,kBAACH,GAAD,KAASG,I,4iFC/BlB,IAAME,GAAoB9F,IAAOC,IAAV,MAiBjB8F,GAA0B/F,IAAOU,OAAV,MA2BvBsF,GAAUhG,IAAOC,IAAV,MAKPgG,GAAajG,IAAOC,IAAV,MAmCViG,GAAQlG,IAAOC,IAAV,MAQLkG,GAAanG,IAAOC,IAAV,MAQVmG,GAAcpG,IAAOC,IAAV,MAIXoG,GAAgBrG,IAAOC,IAAV,MAiFJqG,G,kDA7Db,WAAYnG,GAAQ,IAAD,8BACjB,cAAMA,IAIRoG,MAAQ,CACNpF,WAAY,GANK,EAenBqF,gBAAkB,SAACC,GACjB,IAAItF,EAAasF,EACbtF,EAAa,IACfA,EAAa,GAEXA,EAAa,MACfA,EAAa,KAEf,EAAKuF,SAAS,CACZvF,gBAtBF,EAAKwF,UAAYC,IAAMC,YAFN,E,gEASE,IAAD,EACKC,KAAK3G,MAApBe,EADU,EACVA,GACFF,EAFY,EACNgB,OACSK,QAAO,SAAAE,GAAE,OAAIA,EAAGrB,KAAOA,KAAI,GAChD4F,KAAKH,UAAUrG,QAAQyG,WAAgC,GAAnB/F,EAAMG,WAAkB,K,+BAgBpD,IAAD,SAC8C2F,KAAK3G,MAAlDe,EADD,EACCA,GAAI8F,EADL,EACKA,sBAAuBC,EAD5B,EAC4BA,cAC3B9F,EAAe2F,KAAKP,MAApBpF,WAEF+F,EAAe,YAAIC,MAAM,KAAKC,QAAQ9E,KAAI,SAAAC,GAAE,OAAI,kBAAC6D,GAAD,CAAa3D,IAAKF,GAAKA,MAE7E,OACE,oCACE,kBAAC,GAAD,CAASyC,MAAOgC,IAChB,kBAAClB,GAAD,KACE,kBAACE,GAAD,KACE,kBAACC,GAAD,MACA,kBAACI,GAAD,KAAgBlF,GAChB,kBAAC+E,GAAD,CACEmB,IAAKP,KAAKH,UACVW,SAAU,SAAC/B,GACT,EAAKiB,gBAAgBe,KAAKC,MAAMjC,EAAEkC,OAAOV,WAAa,OAGxD,kBAACZ,GAAD,KAAae,KAGjB,kBAACnB,GAAD,CAAyBxE,KAAK,SAASC,QAAS,kBAAMyF,EAAc/F,EAAIC,KACtE,8BACE,kBAAC,IAAD,CAAiBM,KAAM+D,c,GArDLoB,IAAMc,W,q6ECxHtC,IAAMC,GAAcC,YAAH,MAWXC,GAAe7H,IAAOC,IAAV,KAFO,2EA+DrB,SAAAE,GAAK,MAAmB,UAAfA,EAAMC,MACZC,YADM,SAUT,SAAAF,GAAK,MAAmB,SAAfA,EAAMC,MACZC,YADM,SAWT,SAAAF,GAAK,MAAmB,aAAfA,EAAMC,MACZC,YADM,SAiVEyH,G,4MApUbvB,MAAQ,CACNvE,OAAQ,GACR+F,gBAAgB,EAChBC,mBAAmB,EACnBC,oBAAqB,KACrB3H,QAAS,KACTF,KAAM,S,EAuBR8H,YAAc,WAEZ,EAAKxB,SAAS,CACZ1E,OAFa,KAIfmG,aAAaC,S,EAGfC,gBAAkB,WAChB,IAAMrG,EAAS,YAAI,EAAKuE,MAAMvE,QAAQM,KAAI,SAACtB,GACzC,IAAMkB,EAAC,eAAQlB,GAEf,OADAkB,EAAEf,WAAa,EACRe,KAET,EAAKwE,SAAS,CACZ1E,SACA1B,QAAS,OAEX6H,aAAaG,QAAQ,SAAUC,KAAKC,UAAUxG,K,EAGhDyG,uBAAyB,WACvB,GAAIN,aAAanG,OAAQ,CACvB,IAAMA,EAASuG,KAAKG,MAAMP,aAAanG,QACvC,EAAK0E,SAAS,CAAE1E,a,EAIpB2G,wBAA0B,WACxB,IAAM3G,EAAS,CACb,CACEd,GAAI,EACJD,KAAM,WACNE,WAAY,GAEd,CACED,GAAI,EACJD,KAAM,cACNE,WAAY,GAEd,CACED,GAAI,EACJD,KAAM,OACNE,WAAY,GAEd,CACED,GAAI,EACJD,KAAM,QACNE,WAAY,GAEd,CACED,GAAI,EACJD,KAAM,OACNE,WAAY,GAEd,CACED,GAAI,EACJD,KAAM,QACNE,WAAY,GAEd,CACED,GAAI,EACJD,KAAM,SACNE,WAAY,IAGhB,EAAKuF,SAAS,CAAE1E,WAChBmG,aAAaG,QAAQ,SAAUC,KAAKC,UAAUxG,K,EAGhD4G,uBAAyB,WACvB,EAAKlC,UAAS,SAAAmC,GAAS,MAAK,CAC1Bd,gBAAiBc,EAAUd,oB,EAI/Be,eAAiB,SAACvD,GAChBA,EAAEwD,iBACF,EAAKH,yBACL,IAAM5H,EAAQ,CACZE,GAAI8H,KAAKC,MACThI,KAAMsE,EAAEkC,OAAOyB,YAAYvH,MAC3BR,WAAY,GAERa,EAAM,YAAO,EAAKuE,MAAMvE,QAC9BA,EAAOmH,KAAKnI,GACZ,EAAK0F,SAAS,CACZ1E,WAEFmG,aAAaG,QAAQ,SAAUC,KAAKC,UAAUxG,K,EAGhDoH,gBAAkB,SAACvH,EAAOX,GACxB,IAAMc,EAAS,YAAI,EAAKuE,MAAMvE,QAAQM,KAAI,SAACtB,GACzC,IAAMkB,EAAC,eAAQlB,GAIf,OAHIkB,EAAEhB,KAAOA,IACXgB,EAAEjB,KAAOY,EAAM4F,OAAO9F,OAEjBO,KAET,EAAKwE,SAAS,CACZ1E,WAEFmG,aAAaG,QAAQ,SAAUC,KAAKC,UAAUxG,K,EAGhDqH,kBAAoB,SAACnI,GACnB,IAAMc,EAAS,YAAI,EAAKuE,MAAMvE,QAAQK,QAAO,SAAArB,GAAK,OAAIA,EAAME,KAAOA,KACnE,EAAKwF,SAAS,CACZ1E,WAEFmG,aAAaG,QAAQ,SAAUC,KAAKC,UAAUxG,K,EAGhDsH,gCAAkC,SAACpI,GACjC,EAAKwF,UAAS,SAAAmC,GAAS,MAAK,CAC1Bb,mBAAoBa,EAAUb,kBAC9BC,oBAAqBY,EAAUb,kBAAoB,KAAO9G,O,EAI9D+F,cAAgB,SAAC/F,EAAIC,GACnB,IAAMa,EAAS,YAAI,EAAKuE,MAAMvE,QAAQM,KAAI,SAACtB,GACzC,IAAMkB,EAAC,eAAQlB,GAIf,OAHIkB,EAAEhB,KAAOA,IACXgB,EAAEf,WAAaA,GAEVe,KAET,EAAKwE,SAAS,CACZ1E,WAEFmG,aAAaG,QAAQ,SAAUC,KAAKC,UAAUxG,IAE9C,EAAKsH,mC,EAGPC,gBAAkB,WAAO,IACfjJ,EAAY,EAAKiG,MAAjBjG,QAEFkJ,EADM,YAAO,EAAKjD,MAAMvE,QACFK,QAAO,SAAArB,GAAK,OAAIA,EAAMG,WAAa,KACzDsI,EAAcD,EAAanH,QAAO,SAAArB,GAAK,OAAIA,EAAMG,WAAab,KAMpE,GAJ4B,IAAxBkJ,EAAaE,QACf,EAAKC,QAAQ,SAGXF,EAAYC,OAAS,EAAG,CAC1B,IAAME,EAAOH,EAAY,GAAGtI,WAC5B,EAAKuF,SAAS,CACZpG,QAASsJ,SAGX,EAAKC,kB,EAITC,oBAAsB,WAAO,IACnBxJ,EAAY,EAAKiG,MAAjBjG,QAEFkJ,EADM,YAAO,EAAKjD,MAAMvE,QACFK,QAAO,SAAArB,GAAK,OAAIA,EAAMG,WAAa,KACzDsI,EAAcD,EAAanH,QAAO,SAAArB,GAAK,OAAIA,EAAMG,WAAab,KAMpE,GAJ4B,IAAxBkJ,EAAaE,QACf,EAAKC,QAAQ,WAGXF,EAAYC,OAAS,GAMvB,OAAO,EALP,IAAMK,EAAWN,EAAYA,EAAYC,OAAS,GAAGvI,WACrD,EAAKuF,SAAS,CACZpG,QAASyJ,K,EAOfF,eAAiB,WACf,IAAM7H,EAAS,YAAI,EAAKuE,MAAMvE,QAC3BM,KAAI,SAACtB,GACJ,IAAMkB,EAAC,eAAQlB,GAEf,OADAkB,EAAEf,YAAc,GACTe,KAERD,MAAK,SAACC,EAAGC,GACR,OAAID,EAAEf,WAAagB,EAAEhB,WAAmB,EACpCe,EAAEf,WAAagB,EAAEhB,YAAoB,EAClC,KAEPyI,GAAO,EACP5H,EAAOK,QAAO,SAAArB,GAAK,OAAIA,EAAMG,WAAa,KAAGuI,OAAS,IACxDE,EAAO5H,EAAO,GAAGb,YAGdyI,EAMH,EAAKlD,SAAS,CACZ1E,SACA1B,QAASsJ,KAPX,EAAKlD,SAAS,CACZ1E,WAEF,EAAK2H,QAAQ,W,EASjBK,mBAAqB,WACnB,IAAMhI,EAAS,YAAI,EAAKuE,MAAMvE,QAC3BM,KAAI,SAACtB,GACJ,IAAMkB,EAAC,eAAQlB,GAEf,OADAkB,EAAEf,YAAc,GACTe,KAERD,MAAK,SAACC,EAAGC,GACR,OAAID,EAAEf,WAAagB,EAAEhB,WAAmB,EACpCe,EAAEf,WAAagB,EAAEhB,YAAoB,EAClC,KAGLyI,EAAO5H,EAAO,GAAGb,WAEvB,EAAKuF,SAAS,CACZ1E,SACA1B,QAASsJ,K,EAIbK,cAAgB,a,kEAvPdnD,KAAK2B,2B,8BAGCrI,GACN,IAAIE,EAAU,KACD,aAATF,GAAuB0G,KAAKP,MAAMvE,OAAO0H,OAAS,IAMpDpJ,EALe,YAAIwG,KAAKP,MAAMvE,QAAQC,MAAK,SAACC,EAAGC,GAC7C,OAAID,EAAEf,WAAagB,EAAEhB,WAAmB,EACpCe,EAAEf,WAAagB,EAAEhB,YAAoB,EAClC,KAEQ,GAAGA,YAEtB2F,KAAKJ,SAAS,CACZtG,OACAE,c,+BA0OM,IAAD,SAQHwG,KAAKP,MANPvE,EAFK,EAELA,OACA5B,EAHK,EAGLA,KACA2H,EAJK,EAILA,eACAC,EALK,EAKLA,kBACAC,EANK,EAMLA,oBACA3H,EAPK,EAOLA,QAGF,OACE,kBAACuH,GAAD,CAAczH,KAAMA,GAClB,kBAACuH,GAAD,MACA,kBAAC,EAAD,MAEmB,IAAlB3F,EAAO0H,QAAgB,kBAAC,GAAD,CAAQnI,KAAK,QAAQsE,YAAaiB,KAAK6B,0BAE9DZ,GACC,kBAAC,GAAD,CAAQ5C,MAAO2B,KAAK8B,uBAAwBxD,QAAS0B,KAAKgC,gBAA1D,kBAKuD,IAAxD9G,EAAOK,QAAO,SAAArB,GAAK,OAAIA,EAAMG,WAAa,KAAGuI,QAClC,aAATtJ,GACA4B,EAAO0H,OAAS,EACjB,kBAAC,GAAD,CAAQnI,KAAK,UAAUsE,YAAaiB,KAAK6B,0BAEvC,kBAACuB,EAAD,CACElI,OAAQA,EACR5B,KAAMA,EACNiB,UAAWyF,KAAKsC,gBAChB9H,YAAawF,KAAKuC,kBAClBjI,sBAAuB0F,KAAKwC,gCAC5BhJ,QAASA,IAId0H,GACC,kBAAC,GAAD,CACE9G,GAAI+G,EACJjB,sBAAuBF,KAAKwC,gCAC5BrC,cAAeH,KAAKG,cACpBjF,OAAQA,IAIZ,kBAACmI,GAAD,CACE/J,KAAMA,EACNwD,aAAc,kBAAM,EAAK+F,QAAQ,UACjCjG,YAAa,kBAAM,EAAKiG,QAAQ,SAChChG,gBAAiB,kBAAM,EAAKgG,QAAQ,aACpC9F,MAAOiD,KAAKoB,YACZpE,UAAWgD,KAAKuB,gBAChBtE,SAAU+C,KAAK8B,uBACf5E,UAAW8C,KAAKyC,gBAChBtF,cAAe6C,KAAKgD,oBACpB5F,SAAU4C,KAAK+C,eACf1F,aAAc2C,KAAKkD,0B,GA9TXtC,aCvGE0C,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.5084ce3b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bulge.8c680e74.svg\";","import React from 'react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\n\nimport styled, { css } from 'styled-components';\n\nconst ActorRow = styled.div`\n  position: relative;\n  width: 100%;\n  margin: 0.5rem 0;\n`;\n\nconst ActorRowInner = styled.div`\n  position: relative;\n  left: 0;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin: 0 1rem;\n  padding: 0.25rem 0.5rem 0.25rem 0.25rem;\n  background: #efefef;\n  border-radius: 0.25rem;\n  opacity: 1;\n  transition: 0.25s;\n\n  ${props => props.mode === 'edit'\n    && css`\n      left: 2rem;\n    `}\n\n  ${props => props.current === true\n    && css`\n      background: orange;\n    `}\n\n  ${props => props.willgo === true && css``}\n\n  ${props => props.went === true\n    && css`\n      opacity: 0.5;\n    `}\n`;\n\nconst ButtonRemoveActor = styled.button`\n  position: absolute;\n  top: 50%;\n  left: -1rem;\n  border: 0;\n  padding: 0.5rem;\n  background: transparent;\n  color: red;\n  opacity: 1;\n  transform: translate(-50%, -50%) scale(1);\n  cursor: pointer;\n  transition: 0.25s;\n\n  ${props => props.mode === 'edit'\n    && css`\n      left: 1.5rem;\n      opacity: 1;\n    `}\n`;\n\nconst ActorName = styled.input`\n  background: transparent;\n  // color: black;\n  border: 1px solid transparent;\n  transition: 0.25s;\n  padding: 0.25rem;\n  border-radius: 0.25rem;\n  box-shadow: none;\n  -webkit-appearance: none;\n\n  &[disabled] {\n    color: black;\n  }\n\n  ${props => props.mode === 'edit'\n    && css`\n      background: rgba(255, 255, 255, 0.5);\n      border: 1px solid rgba(0, 0, 0, 0.5);\n    `}\n`;\n\nconst ActorNameScreen = styled.div`\n  position: absolute;\n  left: 0;\n  top: 0;\n  z-index: 10;\n  width: 100%;\n  height: 100%;\n`;\n\nconst ActorInitiative = styled.div`\n  font-size: 1.25rem;\n  font-family: 'Dosis', sans-serif;\n`;\n\nconst ButtonSetInitiative = styled.button`\n  position: absolute;\n  z-index: 15;\n  overflow: hidden;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: transparent;\n  border: 0;\n\n  span {\n    position: absolute;\n    bottom: 110%;\n    right: 110%;\n  }\n`;\n\nconst actor = (props) => {\n  const {\n    mode,\n    name,\n    id,\n    initiative,\n    showInitiativeSpinner,\n    editActor,\n    removeActor,\n    current,\n    went,\n    willgo,\n  } = props;\n\n  return (\n    <ActorRow mode={mode}>\n      <ButtonRemoveActor type=\"button\" onClick={() => removeActor(id)} mode={mode}>\n        <FontAwesomeIcon icon={faTimesCircle} />\n      </ButtonRemoveActor>\n      <ActorRowInner mode={mode} current={current} willgo={willgo} went={went}>\n        <ActorName type=\"text\" value={name} onChange={event => editActor(event, id)} mode={mode} />\n\n        <ActorInitiative>\n          <span>{initiative}</span>\n        </ActorInitiative>\n\n        {mode !== 'edit' && <ActorNameScreen />}\n\n        {mode === 'input' && (\n          <ButtonSetInitiative type=\"button\" onClick={() => showInitiativeSpinner(id)}>\n            <span>Set initiative</span>\n          </ButtonSetInitiative>\n        )}\n      </ActorRowInner>\n    </ActorRow>\n  );\n};\n\nexport default actor;\n","import React from 'react';\n\nimport styled from 'styled-components';\n\nimport Actor from './Actor';\n\nconst ActorList = styled.div`\n  position: relative;\n  z-index: 10;\n  margin: 1rem 0;\n  padding: 0 0 7rem 0;\n`;\n\nconst actorList = (props) => {\n  let { actors } = props;\n  const {\n    mode, showInitiativeSpinner, removeActor, editActor, current,\n  } = props;\n\n  if (mode !== 'tracking') {\n    actors = actors.sort((a, b) => {\n      if (a.name.toLowerCase() < b.name.toLowerCase()) return -1;\n      if (a.name.toLowerCase() > b.name.toLowerCase()) return 1;\n      return 0;\n    });\n  } else {\n    actors = actors\n      .sort((a, b) => {\n        if (a.initiative > b.initiative) return -1;\n        if (a.initiative < b.initiative) return 1;\n        return 0;\n      })\n      .filter(actor => actor.initiative > 0);\n  }\n\n  actors = actors.map(el => (\n    <Actor\n      key={el.id}\n      id={el.id}\n      name={el.name}\n      initiative={el.initiative}\n      mode={mode}\n      showInitiativeSpinner={showInitiativeSpinner}\n      removeActor={removeActor}\n      editActor={editActor}\n      current={el.initiative === current}\n      willgo={el.initiative < current && current !== null}\n      went={el.initiative > current && current !== null}\n    />\n  ));\n\n  return <ActorList>{actors}</ActorList>;\n};\n\nexport default actorList;\n","import React from 'react';\n\nimport styled from 'styled-components';\n\nconst Titlebar = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 20;\n  width: 100vw;\n  background: black;\n  color: white;\n  padding: 0.5em 0;\n  text-align: center;\n  box-shadow: 0 0 0.5rem rgba(0, 0, 0, 0.25);\n  font-family: 'Pacifico', cursive;\n  font-size: 1.5rem;\n  line-height: 1;\n`;\n\nconst titlebar = () => <Titlebar>Hoi, fragger!</Titlebar>;\n\nexport default titlebar;\n","import React from 'react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faTrashAlt,\n  faPen,\n  faPlusSquare,\n  faArrowDown,\n  faArrowUp,\n  faPlay,\n  faArrowAltCircleRight,\n  faArrowAltCircleLeft,\n  faEraser,\n  faHandPeace,\n} from '@fortawesome/free-solid-svg-icons';\n\nimport styled, { css } from 'styled-components';\nimport bulge from '../media/bulge.svg';\n\nconst transitionTiming = '0.5s cubic-bezier(1, 0, 0.17, 1.4)';\n\nconst ControlBar = styled.div`\n  position: fixed;\n  z-index: 10;\n  bottom: 0;\n  left: 0;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  width: 100vw;\n  padding: 0.25rem;\n  background: black;\n  box-shadow: 0 0 0.5rem rgba(0, 0, 0, 0.25);\n\n  &:before {\n    content: '';\n    position: absolute;\n    bottom: 100%;\n    left: 50%;\n    display: block;\n    width: calc(100% / 2);\n    transform: translateX(-50%);\n    height: 1rem;\n    background: url(${bulge}) no-repeat bottom/auto;\n    transition: left ${transitionTiming};\n  }\n\n  ${props => props.mode === 'edit'\n    && css`\n      &:before {\n        left: 17.5%;\n      }\n    `}\n  ${props => props.mode === 'tracking'\n    && css`\n      &:before {\n        left: 82.5%;\n      }\n    `}\n`;\n\nconst Button = styled.button`\n  apperance: none;\n  position: fixed;\n  z-index: 15;\n  width: 3rem;\n  border: 0;\n  padding: 0;\n  border-radius: 100px;\n  background: black;\n  color: white;\n  outline: none;\n\n  &:before {\n    content: '';\n    display: block;\n    width: 100%;\n    padding-top: 100%;\n  }\n\n  span {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n  }\n`;\n\nconst ButtonBar = styled(Button)`\n  position: relative;\n  background: none;\n  transition: transform ${transitionTiming};\n  &:nth-child(1) {\n    ${props => props.mode === 'edit'\n      && css`\n        transform: scale(1.5);\n      `}\n  }\n  &:nth-child(2) {\n    ${props => props.mode === 'input'\n      && css`\n        transform: scale(1.5);\n      `}\n  }\n  &:nth-child(3) {\n    ${props => props.mode === 'tracking'\n      && css`\n        transform: scale(1.5);\n      `}\n  }\n`;\n\nconst ButtonLarge = styled(Button)`\n  width: 5rem;\n  font-size: 2rem;\n`;\n\nconst ButtonAddActor = styled(ButtonLarge)`\n  left: -5rem;\n  bottom: 5rem;\n  transform: translateX(-50%);\n  transition: left ${transitionTiming};\n  ${props => props.mode === 'edit'\n    && css`\n      left: 50%;\n    `}\n`;\nconst ButtonReset = styled(Button)`\n  left: -3rem;\n  bottom: 5rem;\n  transition: left ${transitionTiming};\n  ${props => props.mode === 'edit'\n    && css`\n      left: 1rem;\n    `}\n`;\n\nconst ButtonSoftReset = styled(Button)`\n  right: -3rem;\n  bottom: 5rem;\n  transition: right ${transitionTiming};\n  ${props => props.mode === 'input'\n    && css`\n      right: 1rem;\n    `}\n`;\n\nconst ButtonNextActor = styled(ButtonLarge)`\n  left: -5rem;\n  bottom: 5rem;\n  transform: translateX(-50%);\n  transition: left ${transitionTiming};\n  ${props => props.mode === 'tracking'\n    && css`\n      left: 50%;\n    `}\n`;\nconst ButtonPreviousActor = styled(Button)`\n  left: -3rem;\n  bottom: 5rem;\n  transition: left ${transitionTiming};\n  ${props => props.mode === 'tracking'\n    && css`\n      left: 2rem;\n    `}\n`;\nconst ButtonNextRound = styled(Button)`\n  right: -3rem;\n  bottom: 5rem;\n  transition: right ${transitionTiming};\n  ${props => props.mode === 'tracking'\n    && css`\n      right: 1rem;\n    `}\n`;\n\nconst ButtonPreviousRound = styled(Button)`\n  right: -3rem;\n  bottom: 8.5rem;\n  transition: right ${transitionTiming};\n  ${props => props.mode === 'tracking'\n    && css`\n      right: 1rem;\n    `}\n`;\n\nconst controls = (props) => {\n  const {\n    mode,\n    setModeEdit,\n    setModeTracking,\n    setModeInput,\n    reset,\n    softReset,\n    addActor,\n    nextActor,\n    previousActor,\n    nextTurn,\n    previousTurn,\n  } = props;\n  return (\n    <>\n      <ControlBar mode={mode}>\n        <ButtonBar type=\"button\" onClick={setModeEdit} mode={mode}>\n          <span>\n            <FontAwesomeIcon icon={faPen} />\n          </span>\n        </ButtonBar>\n\n        <ButtonBar type=\"button\" onClick={setModeInput} mode={mode}>\n          <span>\n            <FontAwesomeIcon icon={faHandPeace} />\n          </span>\n        </ButtonBar>\n\n        <ButtonBar type=\"button\" onClick={setModeTracking} mode={mode}>\n          <span>\n            <FontAwesomeIcon icon={faPlay} />\n          </span>\n        </ButtonBar>\n      </ControlBar>\n\n      <ButtonReset type=\"button\" mode={mode} onClick={reset}>\n        <span>\n          <FontAwesomeIcon icon={faTrashAlt} />\n        </span>\n      </ButtonReset>\n      <ButtonAddActor type=\"button\" mode={mode} onClick={addActor}>\n        <span>\n          <FontAwesomeIcon icon={faPlusSquare} />\n        </span>\n      </ButtonAddActor>\n\n      <ButtonSoftReset type=\"button\" mode={mode} onClick={softReset}>\n        <span>\n          <FontAwesomeIcon icon={faEraser} />\n        </span>\n      </ButtonSoftReset>\n\n      <ButtonNextActor type=\"button\" mode={mode} onClick={nextActor}>\n        <span>\n          <FontAwesomeIcon icon={faArrowDown} />\n        </span>\n      </ButtonNextActor>\n      <ButtonPreviousActor type=\"button\" mode={mode} onClick={previousActor}>\n        <span>\n          <FontAwesomeIcon icon={faArrowUp} />\n        </span>\n      </ButtonPreviousActor>\n      <ButtonNextRound type=\"button\" mode={mode} onClick={nextTurn}>\n        <span>\n          <FontAwesomeIcon icon={faArrowAltCircleRight} />\n        </span>\n      </ButtonNextRound>\n      <ButtonPreviousRound type=\"button\" mode={mode} onClick={previousTurn}>\n        <span>\n          <FontAwesomeIcon icon={faArrowAltCircleLeft} />\n        </span>\n      </ButtonPreviousRound>\n    </>\n  );\n};\n\nexport default controls;\n","import React from 'react';\n\nimport styled from 'styled-components';\n\nconst Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 999;\n  width: 100vw;\n  height: 100vh;\n  background: rgba(0, 0, 0, 0.7);\n`;\n\nconst overlay = (props) => {\n  const { click } = props;\n  return <Overlay onClick={click} />;\n};\n\nexport default overlay;\n","import React from 'react';\n\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck } from '@fortawesome/free-solid-svg-icons';\nimport Overlay from './Overlay';\n\nconst Prompt = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  z-index: 1000;\n  transform: translate(-50%, -50%);\n  width: 80vmin;\n  background: white;\n  padding: 0 0 1rem 0;\n  border-radius: 0.25rem;\n\n  h3 {\n    font-size: 1rem;\n    font-weight: bold;\n    margin: 0 0 1rem;\n    padding: 0.5rem;\n    background: rgba(0, 0, 0, 0.25);\n  }\n\n  input {\n    display: block;\n    border: 1px solid rgba(0, 0, 0, 0.25);\n    width: calc(100% - 2rem);\n    margin: 1rem auto;\n    padding: 0.5rem;\n    text-align: center;\n  }\n\n  form button {\n    display: block;\n    width: 4rem;\n    background: rgba(0, 0, 0, 0.25);\n    margin: 0 1rem 0 auto;\n    padding: 0.5rem;\n    border: 0;\n  }\n`;\n\nconst prompt = (props) => {\n  const { close, confirm, children } = props;\n  return (\n    <>\n      <Overlay click={close} />\n      <Prompt>\n        <form onSubmit={e => confirm(e)}>\n          <h3>{children}</h3>\n          <input type=\"text\" name=\"promptInput\" />\n          <button type=\"submit\">\n            <FontAwesomeIcon icon={faCheck} />\n          </button>\n        </form>\n      </Prompt>\n    </>\n  );\n};\n\nexport default prompt;\n","import React from 'react';\n\nimport styled from 'styled-components';\n\nconst Splash = styled.div`\n  position: relative;\n  z-index: 10;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 75vh;\n  padding: 0 1rem;\n  text-align: center;\n\n  span {\n    text-decoration: underline;\n  }\n`;\n\nconst LoadDefault = styled.a`\n  text-decoration: underline;\n  color: black;\n`;\n\nconst splash = (props) => {\n  const { type } = props;\n  let msg = '';\n  if (type === 'empty') {\n    msg = (\n      <p>\n        Add some actors. Click edit to add some one by one, or\n        {' '}\n        <LoadDefault onClick={props.loadDefault}>load the default set.</LoadDefault>\n      </p>\n    );\n  } else if (type === 'allzero') {\n    msg = <p>No actors with initiative over 0.</p>;\n  }\n  return <Splash>{msg}</Splash>;\n};\n\nexport default splash;\n","import React from 'react';\n\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck } from '@fortawesome/free-solid-svg-icons';\nimport Overlay from './Overlay';\n\nconst InitiativeSpinner = styled.div`\n  position: absolute;\n  z-index: 1000;\n  top: 50%;\n  left: 0;\n  width: 100%;\n  padding: 1rem 0;\n  background: white;\n  text-align: center;\n  transform: translateY(-50%);\n  font-family: 'Dosis', sans-serif;\n\n  h3 {\n    margin: 0 0 1rem;\n  }\n`;\n\nconst ButtonConfirmInitiative = styled.button`\n  position: absolute;\n  top: calc(100% + 1rem);\n  left: 50%;\n  width: 4rem;\n  padding: 0;\n  border: 0;\n  border-radius: 100px;\n  background: white;\n  font-size: 1.25rem;\n  transform: translateX(-50%);\n\n  &:before {\n    content: '';\n    display: block;\n    width: 100%;\n    padding-top: 100%;\n  }\n\n  span {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n  }\n`;\n\nconst Spinner = styled.div`\n  position: relative;\n  width: 100vw;\n`;\n\nconst Indicators = styled.div`\n  position: absolute;\n  z-index: 5;\n  top: 0;\n  left: 50%;\n  width: 75%;\n  height: 100%;\n  transform: translateX(-50%);\n  // border-top: 1px solid black;\n  // border-bottom: 1px solid black;\n\n  &:before,\n  &:after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 50%;\n    width: 0;\n    height: 0;\n    border-right: 0.25rem solid transparent;\n    border-left: 0.25rem solid transparent;\n    border-top: 0.25rem solid black;\n    transform: translateX(-50%);\n  }\n\n  &:after {\n    top: auto;\n    bottom: 0;\n    border-top: 0;\n    border-right: 0.25rem solid transparent;\n    border-left: 0.25rem solid transparent;\n    border-bottom: 0.25rem solid black;\n  }\n`;\n\nconst Track = styled.div`\n  position: relative;\n  z-index: 10;\n  width: 100vw;\n  overflow-x: scroll;\n  -webkit-overflow-scrolling: touch;\n`;\n\nconst TrackInner = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: calc(101 * 2rem + 100vw);\n  padding: 2rem 50vw;\n`;\n\nconst TrackNumber = styled.div`\n  width: 2rem;\n`;\n\nconst CurrentNumber = styled.div`\n  position: absolute;\n  z-index: 15;\n  left: 50%;\n  // top: 50%;\n  bottom: 100%;\n  transform: translate(-50%, -50%);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 6rem;\n  height: 6rem;\n  border-radius: 6rem;\n  background: black;\n  color: white;\n  font-size 1.5rem;\n  line-height: 1;\n`;\n\nclass initiativeSpinner extends React.Component {\n  constructor(props) {\n    super(props);\n    this.scrollRef = React.createRef();\n  }\n\n  state = {\n    initiative: 0,\n  };\n\n  componentDidMount() {\n    const { id, actors } = this.props;\n    const actor = actors.filter(el => el.id === id)[0];\n    this.scrollRef.current.scrollLeft = actor.initiative * 32 + 16;\n  }\n\n  storeInitiative = (i) => {\n    let initiative = i;\n    if (initiative < 0) {\n      initiative = 0;\n    }\n    if (initiative > 100) {\n      initiative = 100;\n    }\n    this.setState({\n      initiative,\n    });\n  };\n\n  render() {\n    const { id, hideInitiativeSpinner, setInitiative } = this.props;\n    const { initiative } = this.state;\n\n    const tracknumbers = [...Array(101).keys()].map(el => <TrackNumber key={el}>{el}</TrackNumber>);\n\n    return (\n      <>\n        <Overlay click={hideInitiativeSpinner} />\n        <InitiativeSpinner>\n          <Spinner>\n            <Indicators />\n            <CurrentNumber>{initiative}</CurrentNumber>\n            <Track\n              ref={this.scrollRef}\n              onScroll={(e) => {\n                this.storeInitiative(Math.floor(e.target.scrollLeft / 32));\n              }}\n            >\n              <TrackInner>{tracknumbers}</TrackInner>\n            </Track>\n          </Spinner>\n          <ButtonConfirmInitiative type=\"button\" onClick={() => setInitiative(id, initiative)}>\n            <span>\n              <FontAwesomeIcon icon={faCheck} />\n            </span>\n          </ButtonConfirmInitiative>\n        </InitiativeSpinner>\n      </>\n    );\n  }\n}\n\nexport default initiativeSpinner;\n","import React, { Component } from 'react';\n\nimport styled, { css, createGlobalStyle } from 'styled-components';\nimport Actors from './components/Actors';\nimport Titlebar from './components/Titlebar';\nimport Controls from './components/Controls';\nimport Prompt from './components/Prompt';\nimport Splash from './components/Splash';\nimport InitiativeSpinner from './components/InitiativeSpinner';\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    height: 100vh;\n    overscroll-behavior: none;\n    background: black;\n    font-family: 'Merriweather Sans', serif;\n  }\n`;\n\nconst transitionTiming = '0.5s cubic-bezier(1, 0, 0.17, 1.4)';\n\nconst AppContainer = styled.div`\n  position: relative;\n  height: 100vh;\n  overflow: hidden;\n  overflow-y: auto;\n  padding: 3rem 0;\n  background-color: #abe9cd;;\n  background-image: linear-gradient(-20deg, \n      rgba(255,255,255,0) 33%, \n      rgba(255,255,255,0.2) 33%, \n      rgba(255,255,255,0) 67%, \n      rgba(255,255,255,0) 67%), \n    linear-gradient(160deg, \n      rgba(0,0,0,0) 15%, \n      rgba(0,0,0,0.1) 15%, \n      rgba(0,0,0,0) 67%), \n    linear-gradient(315deg, #abe9cd 0%, #3eadcf 74%);\n  transition: background 1s;\n  \n  &:before, &:after {\n    content: \"\";\n    position: fixed;\n    z-index: 1;\n    top: 0;\n    width: 100vw;\n    height: 100vh;\n    transition: left ${transitionTiming}, right ${transitionTiming};\n  }\n\n  &:after {\n    background-color: #fc9842;\n    background-image: linear-gradient(-20deg, \n        rgba(255,255,255,0) 33%, \n        rgba(255,255,255,0.2) 33%, \n        rgba(255,255,255,0) 67%, \n        rgba(255,255,255,0) 67%), \n      linear-gradient(160deg, \n        rgba(0,0,0,0) 15%, \n        rgba(0,0,0,0.1) 15%, \n        rgba(0,0,0,0) 67%), \n      linear-gradient(315deg, \n          #fc9842 0%, \n          #fe5f75 74%);\n  }\n\n  &:before {\n    background-color: #bf3a30;\n    background-image: linear-gradient(-20deg, \n        rgba(255,255,255,0) 33%, \n        rgba(255,255,255,0.2) 33%, \n        rgba(255,255,255,0) 67%, \n        rgba(255,255,255,0) 67%), \n      linear-gradient(160deg, \n        rgba(0,0,0,0) 15%, \n        rgba(0,0,0,0.1) 15%, \n        rgba(0,0,0,0) 67%), \n      linear-gradient(315deg, \n          #bf3a30 0%, \n          #864ba2 74%);\n  }\n\n  ${props => props.mode === 'input'\n    && css`\n      &:before {\n        left: -100%;\n      }\n      &:after {\n        right: -100%;\n      }\n    `}\n\n  ${props => props.mode === 'edit'\n    && css`\n      background: black;\n      &:before {\n        left: 0;\n      }\n      &:after {\n        right: -100%;\n      }\n    `}\n    \n  ${props => props.mode === 'tracking'\n    && css`\n      background: black;\n      &:before {\n        left: -100%;\n      }\n      &:after {\n        right: 0;\n      }\n    `}\n`;\n\nclass App extends Component {\n  state = {\n    actors: [],\n    addingNewActor: false,\n    settingInitiative: false,\n    settingInitiativeOf: null,\n    current: null,\n    mode: 'input',\n  };\n\n  componentDidMount() {\n    this.handleLoadStoredActors();\n  }\n\n  setMode(mode) {\n    let current = null;\n    if (mode === 'tracking' && this.state.actors.length > 0) {\n      const actors = [...this.state.actors].sort((a, b) => {\n        if (a.initiative < b.initiative) return 1;\n        if (a.initiative > b.initiative) return -1;\n        return 0;\n      });\n      current = actors[0].initiative;\n    }\n    this.setState({\n      mode,\n      current,\n    });\n  }\n\n  handleReset = () => {\n    const actors = [];\n    this.setState({\n      actors,\n    });\n    localStorage.clear();\n  };\n\n  handleSoftReset = () => {\n    const actors = [...this.state.actors].map((actor) => {\n      const a = { ...actor };\n      a.initiative = 0;\n      return a;\n    });\n    this.setState({\n      actors,\n      current: null,\n    });\n    localStorage.setItem('actors', JSON.stringify(actors));\n  };\n\n  handleLoadStoredActors = () => {\n    if (localStorage.actors) {\n      const actors = JSON.parse(localStorage.actors);\n      this.setState({ actors });\n    }\n  };\n\n  handleLoadDefaultActors = () => {\n    const actors = [\n      {\n        id: 1,\n        name: 'Bad Guys',\n        initiative: 0,\n      },\n      {\n        id: 2,\n        name: 'Chrome Blue',\n        initiative: 0,\n      },\n      {\n        id: 3,\n        name: 'Edge',\n        initiative: 0,\n      },\n      {\n        id: 4,\n        name: 'Flick',\n        initiative: 0,\n      },\n      {\n        id: 5,\n        name: 'Plug',\n        initiative: 0,\n      },\n      {\n        id: 6,\n        name: 'Pomph',\n        initiative: 0,\n      },\n      {\n        id: 7,\n        name: 'vand4l',\n        initiative: 0,\n      },\n    ];\n    this.setState({ actors });\n    localStorage.setItem('actors', JSON.stringify(actors));\n  };\n\n  handleShowHideAddActor = () => {\n    this.setState(prevState => ({\n      addingNewActor: !prevState.addingNewActor,\n    }));\n  };\n\n  handleAddActor = (e) => {\n    e.preventDefault();\n    this.handleShowHideAddActor();\n    const actor = {\n      id: Date.now(),\n      name: e.target.promptInput.value,\n      initiative: 0,\n    };\n    const actors = [...this.state.actors];\n    actors.push(actor);\n    this.setState({\n      actors,\n    });\n    localStorage.setItem('actors', JSON.stringify(actors));\n  };\n\n  handleEditActor = (event, id) => {\n    const actors = [...this.state.actors].map((actor) => {\n      const a = { ...actor };\n      if (a.id === id) {\n        a.name = event.target.value;\n      }\n      return a;\n    });\n    this.setState({\n      actors,\n    });\n    localStorage.setItem('actors', JSON.stringify(actors));\n  };\n\n  handleRemoveActor = (id) => {\n    const actors = [...this.state.actors].filter(actor => actor.id !== id);\n    this.setState({\n      actors,\n    });\n    localStorage.setItem('actors', JSON.stringify(actors));\n  };\n\n  handleShowHideInitiativeSpinner = (id) => {\n    this.setState(prevState => ({\n      settingInitiative: !prevState.settingInitiative,\n      settingInitiativeOf: prevState.settingInitiative ? null : id,\n    }));\n  };\n\n  setInitiative = (id, initiative) => {\n    const actors = [...this.state.actors].map((actor) => {\n      const a = { ...actor };\n      if (a.id === id) {\n        a.initiative = initiative;\n      }\n      return a;\n    });\n    this.setState({\n      actors,\n    });\n    localStorage.setItem('actors', JSON.stringify(actors));\n\n    this.handleShowHideInitiativeSpinner();\n  };\n\n  handleNextActor = () => {\n    const { current } = this.state;\n    const actors = [...this.state.actors];\n    const actorsAbove0 = actors.filter(actor => actor.initiative > 0);\n    const validActors = actorsAbove0.filter(actor => actor.initiative < current);\n\n    if (actorsAbove0.length === 0) {\n      this.setMode('input');\n    }\n\n    if (validActors.length > 0) {\n      const next = validActors[0].initiative;\n      this.setState({\n        current: next,\n      });\n    } else {\n      this.handleNextTurn();\n    }\n  };\n\n  handlePreviousActor = () => {\n    const { current } = this.state;\n    const actors = [...this.state.actors];\n    const actorsAbove0 = actors.filter(actor => actor.initiative > 0);\n    const validActors = actorsAbove0.filter(actor => actor.initiative > current);\n\n    if (actorsAbove0.length === 0) {\n      this.setMode('input');\n    }\n\n    if (validActors.length > 0) {\n      const previous = validActors[validActors.length - 1].initiative;\n      this.setState({\n        current: previous,\n      });\n    } else {\n      return false;\n    }\n  };\n\n  handleNextTurn = () => {\n    const actors = [...this.state.actors]\n      .map((actor) => {\n        const a = { ...actor };\n        a.initiative -= 10;\n        return a;\n      })\n      .sort((a, b) => {\n        if (a.initiative < b.initiative) return 1;\n        if (a.initiative > b.initiative) return -1;\n        return 0;\n      });\n    let next = false;\n    if (actors.filter(actor => actor.initiative > 0).length > 0) {\n      next = actors[0].initiative;\n    }\n\n    if (!next) {\n      this.setState({\n        actors,\n      });\n      this.setMode('input');\n    } else {\n      this.setState({\n        actors,\n        current: next,\n      });\n    }\n  };\n\n  handlePreviousTurn = () => {\n    const actors = [...this.state.actors]\n      .map((actor) => {\n        const a = { ...actor };\n        a.initiative += 10;\n        return a;\n      })\n      .sort((a, b) => {\n        if (a.initiative < b.initiative) return 1;\n        if (a.initiative > b.initiative) return -1;\n        return 0;\n      });\n\n    const next = actors[0].initiative;\n\n    this.setState({\n      actors,\n      current: next,\n    });\n  };\n\n  handleNewTurn = () => {};\n\n  render() {\n    const {\n      actors,\n      mode,\n      addingNewActor,\n      settingInitiative,\n      settingInitiativeOf,\n      current,\n    } = this.state;\n\n    return (\n      <AppContainer mode={mode}>\n        <GlobalStyle />\n        <Titlebar />\n\n        {actors.length === 0 && <Splash type=\"empty\" loadDefault={this.handleLoadDefaultActors} />}\n\n        {addingNewActor && (\n          <Prompt close={this.handleShowHideAddActor} confirm={this.handleAddActor}>\n            Name of actor:\n          </Prompt>\n        )}\n\n        {actors.filter(actor => actor.initiative > 0).length === 0\n        && mode === 'tracking'\n        && actors.length > 0 ? (\n          <Splash type=\"allzero\" loadDefault={this.handleLoadDefaultActors} />\n          ) : (\n            <Actors\n              actors={actors}\n              mode={mode}\n              editActor={this.handleEditActor}\n              removeActor={this.handleRemoveActor}\n              showInitiativeSpinner={this.handleShowHideInitiativeSpinner}\n              current={current}\n            />\n          )}\n\n        {settingInitiative && (\n          <InitiativeSpinner\n            id={settingInitiativeOf}\n            hideInitiativeSpinner={this.handleShowHideInitiativeSpinner}\n            setInitiative={this.setInitiative}\n            actors={actors}\n          />\n        )}\n\n        <Controls\n          mode={mode}\n          setModeInput={() => this.setMode('input')}\n          setModeEdit={() => this.setMode('edit')}\n          setModeTracking={() => this.setMode('tracking')}\n          reset={this.handleReset}\n          softReset={this.handleSoftReset}\n          addActor={this.handleShowHideAddActor}\n          nextActor={this.handleNextActor}\n          previousActor={this.handlePreviousActor}\n          nextTurn={this.handleNextTurn}\n          previousTurn={this.handlePreviousTurn}\n        />\n      </AppContainer>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}