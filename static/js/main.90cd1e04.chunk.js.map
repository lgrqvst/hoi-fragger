{"version":3,"sources":["components/Actor.js","components/Actors.js","components/Titlebar.js","components/Controls.js","components/Overlay.js","components/Prompt.js","components/Splash.js","App.js","serviceWorker.js","index.js"],"names":["ActorRow","styled","div","_templateObject","ButtonRemoveActor","button","_templateObject2","ActorName","input","_templateObject3","ActorInitiative","_templateObject4","ButtonSetInitiative","_templateObject5","actor","props","mode","name","id","initiative","setInitiative","editActor","removeActor","disabled","react_default","a","createElement","type","onClick","index_es","icon","faTimesCircle","Object","assign","value","onChange","event","ActorList","Actors_templateObject","actors","sort","b","map","el","Actor","key","Titlebar","Titlebar_templateObject","titlebar","Controls","Controls_templateObject","controls","setModeEdit","setModeTracking","setModeInput","reset","addActor","nextActor","previousActor","faPen","faPlay","faTrashAlt","faPlusSquare","faCheck","faArrowDown","faArrowUp","faStop","Overlay","Overlay_templateObject","overlay","click","Prompt","Prompt_templateObject","CloseButton","Prompt_templateObject2","prompt","close","confirm","children","Fragment","components_Overlay","onSubmit","e","Splash","Splash_templateObject","splash","loadDefault","AppContainer","App_templateObject","App","state","addingNewActor","current","handleSetInitiative","console","log","concat","handleReset","_this","setState","handleLoadDefaultActors","handleShowHideAddActor","prevState","handleAddActor","preventDefault","Date","now","target","promptInput","toConsumableArray","push","handleEditActor","filter","handleRemoveActor","handleNextActor","handlePreviousActor","this","_this2","_this$state","classes","className","join","components_Titlebar","length","components_Splash","components_Prompt","Actors","components_Controls","setMode","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.90cd1e04.chunk.js","sourcesContent":["import React from 'react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\n\nimport styled from 'styled-components';\n\nconst ActorRow = styled.div`\n  position: relative;\n  left: 0;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin: 0.25rem 0;\n  padding: 0.25rem;\n  background: #efefef;\n  border-radius: 0.25rem;\n  transition: 0.25s;\n\n  .App--edit & {\n    left: 2rem;\n  }\n`;\n\nconst ButtonRemoveActor = styled.button`\n  position: absolute;\n  top: 50%;\n  left: -1rem;\n  opacity: 0;\n  transform: translateY(-50%);\n  transition: left 0.25s, opacity 0.25s;\n  color: red;\n\n  .App--edit & {\n    left: -2.5rem;\n    opacity: 1;\n  }\n`;\n\nconst ActorName = styled.input`\n  background: transparent;\n  color: black;\n  border: 1px solid transparent;\n  transition: 0.25s;\n  padding: 0.25rem;\n  border-radius: 0.25rem;\n\n  .App--edit & {\n    background: rgba(255, 255, 255, 0.5);\n    border: 1px solid rgba(0, 0, 0, 0.5);\n  }\n`;\n\nconst ActorInitiative = styled.div`\n  font-size: 1.25rem;\n`;\n\nconst ButtonSetInitiative = styled.button`\n  position: absolute;\n  overflow: hidden;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n\n  span {\n    position: absolute;\n    bottom: 110%;\n    right: 110%;\n  }\n`;\n\nconst actor = (props) => {\n  const {\n    mode, name, id, initiative, setInitiative, editActor, removeActor,\n  } = props;\n\n  const disabled = mode !== 'edit' ? { disabled: 'disabled' } : {};\n\n  return (\n    <ActorRow>\n      {mode === 'edit' && (\n        <ButtonRemoveActor type=\"button\" onClick={() => removeActor(id)}>\n          <FontAwesomeIcon icon={faTimesCircle} />\n        </ButtonRemoveActor>\n      )}\n\n      <ActorName type=\"text\" {...disabled} value={name} onChange={event => editActor(event, id)} />\n\n      <ActorInitiative>\n        <span>{initiative}</span>\n      </ActorInitiative>\n\n      {mode === 'input' && (\n        <ButtonSetInitiative type=\"button\" onClick={() => setInitiative(id)}>\n          <span>Set initiative</span>\n        </ButtonSetInitiative>\n      )}\n    </ActorRow>\n  );\n};\n\nexport default actor;\n","import React from 'react';\n\nimport styled from 'styled-components';\n\nimport Actor from './Actor';\n\nconst ActorList = styled.div`\n  margin: 1rem;\n`;\n\nconst actors = (props) => {\n  let { actors } = props;\n  const {\n    mode, setInitiative, removeActor, editActor,\n  } = props;\n\n  actors = actors\n    .sort((a, b) => {\n      if (a.name < b.name) return -1;\n      if (a.name > b.name) return 1;\n      return 0;\n    })\n    .map(el => (\n      <Actor\n        key={el.id}\n        id={el.id}\n        name={el.name}\n        initiative={el.initiative}\n        mode={mode}\n        setInitiative={setInitiative}\n        removeActor={removeActor}\n        editActor={editActor}\n      />\n    ));\n\n  return <ActorList>{actors}</ActorList>;\n};\n\nexport default actors;\n","import React from 'react';\n\nimport styled from 'styled-components';\n\nconst Titlebar = styled.div`\n  background: black;\n  color: white;\n  padding: 0.5em 0;\n  text-align: center;\n  box-shadow: 0 0 0.5rem rgba(0, 0, 0, 0.25);\n`;\n\nconst titlebar = () => <Titlebar>Hoi, fragger!</Titlebar>;\n\nexport default titlebar;\n","import React from 'react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faTrashAlt,\n  faPen,\n  faPlusSquare,\n  faCheck,\n  faArrowDown,\n  faArrowUp,\n  faPlay,\n  faStop,\n} from '@fortawesome/free-solid-svg-icons';\n\nimport styled from 'styled-components';\n\nconst Controls = styled.div`\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 0.25rem;\n  background: white;\n  box-shadow: 0 0 0.5rem rgba(0, 0, 0, 0.25);\n\n  button {\n    position: relative;\n    width: 3rem;\n    margin: 0 1rem;\n    padding: 0;\n    background: black;\n    border-radius: 100px\n    border: 0;\n    color: white;\n\n    &:before {\n      content: '';\n      display: block;\n      width: 100%;\n      padding-top: 100%;\n    }\n\n    span {\n      position: absolute;\n      top: 50%;\n      left: 50%;\n      transform: translate(-50%, -50%);\n    }\n  }\n`;\n\nconst controls = (props) => {\n  const {\n    mode,\n    setModeEdit,\n    setModeTracking,\n    setModeInput,\n    reset,\n    addActor,\n    nextActor,\n    previousActor,\n  } = props;\n  return (\n    <Controls>\n      {mode === 'input' && (\n        <button type=\"button\" onClick={setModeEdit}>\n          <span>\n            <FontAwesomeIcon icon={faPen} />\n          </span>\n        </button>\n      )}\n      {mode === 'input' && (\n        <button type=\"button\" onClick={setModeTracking}>\n          <span>\n            <FontAwesomeIcon icon={faPlay} />\n          </span>\n        </button>\n      )}\n\n      {mode === 'edit' && (\n        <button type=\"button\">\n          <span>\n            <FontAwesomeIcon icon={faTrashAlt} onClick={reset} />\n          </span>\n        </button>\n      )}\n      {mode === 'edit' && (\n        <button type=\"button\">\n          <span>\n            <FontAwesomeIcon icon={faPlusSquare} onClick={addActor} />\n          </span>\n        </button>\n      )}\n      {mode === 'edit' && (\n        <button type=\"button\" onClick={setModeInput}>\n          <span>\n            <FontAwesomeIcon icon={faCheck} />\n          </span>\n        </button>\n      )}\n\n      {mode === 'tracking' && (\n        <button type=\"button\">\n          <span>\n            <FontAwesomeIcon icon={faArrowDown} onClick={nextActor} />\n          </span>\n        </button>\n      )}\n      {mode === 'tracking' && (\n        <button type=\"button\">\n          <span>\n            <FontAwesomeIcon icon={faArrowUp} onClick={previousActor} />\n          </span>\n        </button>\n      )}\n      {mode === 'tracking' && (\n        <button type=\"button\" onClick={setModeInput}>\n          <span>\n            <FontAwesomeIcon icon={faStop} />\n          </span>\n        </button>\n      )}\n    </Controls>\n  );\n};\n\nexport default controls;\n","import React from 'react';\n\nimport styled from 'styled-components';\n\nconst Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 999;\n  width: 100vw;\n  height: 100vh;\n  background: rgba(0, 0, 0, 0.7);\n`;\n\nconst overlay = (props) => {\n  const { click } = props;\n  return <Overlay onClick={click} />;\n};\n\nexport default overlay;\n","import React from 'react';\n\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimesCircle, faCheck } from '@fortawesome/free-solid-svg-icons';\nimport Overlay from './Overlay';\n\nconst Prompt = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  z-index: 1000;\n  transform: translate(-50%, -50%);\n  width: 80vmin;\n  background: white;\n  padding: 0 0 1rem 0;\n  border-radius: 0.25rem;\n\n  h3 {\n    font-size: 1rem;\n    font-weight: bold;\n    margin: 0 0 1rem;\n    padding: 0.5rem;\n    background: rgba(0, 0, 0, 0.25);\n  }\n\n  input {\n    display: block;\n    border: 1px solid rgba(0, 0, 0, 0.25);\n    width: calc(100% - 2rem);\n    margin: 1rem auto;\n    padding: 0.5rem;\n    text-align: center;\n  }\n\n  form button {\n    display: block;\n    width: 4rem;\n    background: rgba(0, 0, 0, 0.25);\n    margin: 0 1rem 0 auto;\n    padding: 0.5rem;\n    border: 0;\n  }\n`;\n\nconst CloseButton = styled.button`\n  position: absolute;\n  display: block;\n  top: -0.75rem;\n  right: -0.75rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 100px;\n  background: white;\n  font-size: 1.5rem;\n  padding: 0.25rem;\n  width: 2rem;\n  border: 0;\n\n  &:before {\n    content: '';\n    display: block;\n    width: 100%;\n    padding-top: 100%;\n  }\n\n  span {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n  }\n`;\n\nconst prompt = (props) => {\n  const { close, confirm, children } = props;\n  return (\n    <>\n      <Overlay click={close} />\n      <Prompt>\n        <form onSubmit={e => confirm(e)}>\n          <h3>{children}</h3>\n          <input type=\"text\" name=\"promptInput\" />\n          <button type=\"submit\">\n            <FontAwesomeIcon icon={faCheck} />\n          </button>\n        </form>\n        <CloseButton type=\"button\" onClick={close}>\n          <span>\n            <FontAwesomeIcon icon={faTimesCircle} />\n          </span>\n        </CloseButton>\n      </Prompt>\n    </>\n  );\n};\n\nexport default prompt;\n","import React from 'react';\n\nimport styled from 'styled-components';\n\nconst Splash = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 75vh;\n  padding: 0 1rem;\n  text-align: center;\n\n  span {\n    text-decoration: underline;\n  }\n`;\n\nconst splash = props => (\n  <Splash>\n    <p>\n      Add some actors. Click edit to add one by one, or\n      {' '}\n      <span onClick={props.loadDefault}>load the default set</span>\n.\n    </p>\n  </Splash>\n);\n\nexport default splash;\n","import React, { Component } from 'react';\n\nimport styled from 'styled-components';\nimport Actors from './components/Actors';\nimport Titlebar from './components/Titlebar';\nimport Controls from './components/Controls';\nimport Prompt from './components/Prompt';\nimport Splash from './components/Splash';\n\nconst AppContainer = styled.div`\n  position: relative;\n  height: 100vh;\n  overflow: hidden;\n  overflow-y: auto;\n  padding: 0 0 3rem;\n`;\n\nclass App extends Component {\n  state = {\n    actors: [\n      {\n        id: 0,\n        name: 'vand4l',\n        initiative: 0,\n      },\n      {\n        id: 1,\n        name: 'Flick',\n        initiative: 0,\n      },\n      {\n        id: 2,\n        name: 'Chrome Blue',\n        initiative: 0,\n      },\n      {\n        id: 3,\n        name: 'Edge',\n        initiative: 0,\n      },\n      {\n        id: 4,\n        name: 'Plug',\n        initiative: 0,\n      },\n      {\n        id: 5,\n        name: 'Pomph',\n        initiative: 0,\n      },\n      {\n        id: 6,\n        name: 'The Enemy',\n        initiative: 0,\n      },\n    ],\n    addingNewActor: false,\n    current: null,\n    mode: 'input',\n  };\n\n  setMode(mode) {\n    this.setState({\n      mode,\n    });\n  }\n\n  handleSetInitiative = (name) => {\n    console.log(`Set initiative of ${name}!`);\n  };\n\n  handleReset = () => {\n    const actors = [];\n    this.setState({\n      actors,\n    });\n  };\n\n  handleLoadDefaultActors = () => {\n    const actors = [\n      {\n        id: 0,\n        name: 'vand4l',\n        initiative: 0,\n      },\n      {\n        id: 1,\n        name: 'Flick',\n        initiative: 0,\n      },\n      {\n        id: 2,\n        name: 'Chrome Blue',\n        initiative: 0,\n      },\n      {\n        id: 3,\n        name: 'Edge',\n        initiative: 0,\n      },\n      {\n        id: 4,\n        name: 'Plug',\n        initiative: 0,\n      },\n      {\n        id: 5,\n        name: 'Pomph',\n        initiative: 0,\n      },\n      {\n        id: 6,\n        name: 'The Enemy',\n        initiative: 0,\n      },\n    ];\n    this.setState({ actors });\n  };\n\n  handleShowHideAddActor = () => {\n    this.setState(prevState => ({\n      addingNewActor: !prevState.addingNewActor,\n    }));\n  };\n\n  handleAddActor = (e) => {\n    e.preventDefault();\n    this.handleShowHideAddActor();\n    const actor = {\n      id: Date.now(),\n      name: e.target.promptInput.value,\n      initiative: 0,\n    };\n    const actors = [...this.state.actors];\n    actors.push(actor);\n    this.setState({\n      actors,\n    });\n  };\n\n  handleEditActor = (event, id) => {\n    const actors = [...this.state.actors].filter((actor) => {\n      if (actor.id === id) {\n        actor.name = event.target.value;\n      }\n      return actor;\n    });\n    this.setState({\n      actors,\n    });\n  };\n\n  handleRemoveActor = (id) => {\n    const actors = [...this.state.actors].filter((actor) => {\n      if (actor.id !== id) {\n        return actor;\n      }\n      return false;\n    });\n    this.setState({\n      actors,\n    });\n  };\n\n  handleNextActor = () => {\n    console.log('Set next actor to current');\n  };\n\n  handlePreviousActor = () => {\n    console.log('Set previous actor to current');\n  };\n\n  handle;\n\n  render() {\n    const { actors, mode, addingNewActor } = this.state;\n\n    const classes = ['App', `App--${mode}`];\n\n    return (\n      <AppContainer className={classes.join(' ')}>\n        <Titlebar />\n\n        {actors.length === 0 && <Splash loadDefault={this.handleLoadDefaultActors} />}\n\n        {addingNewActor && (\n          <Prompt close={this.handleShowHideAddActor} confirm={this.handleAddActor}>\n            Name of actor:\n          </Prompt>\n        )}\n\n        <Actors\n          actors={actors}\n          mode={mode}\n          editActor={this.handleEditActor}\n          removeActor={this.handleRemoveActor}\n          setInitiative={this.handleSetInitiative}\n        />\n\n        <Controls\n          mode={mode}\n          setModeInput={() => this.setMode('input')}\n          setModeEdit={() => this.setMode('edit')}\n          setModeTracking={() => this.setMode('tracking')}\n          reset={this.handleReset}\n          addActor={this.handleShowHideAddActor}\n          nextActor={this.handleNextActor}\n          previousActor={this.handlePreviousActor}\n        />\n      </AppContainer>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}